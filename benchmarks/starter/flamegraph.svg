<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="615"><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="0.0000%" y="837" width="0.1626%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="0.0000%" y="821" width="0.1626%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="0.1626%" y="837" width="0.4878%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="3"/><text x="0.4126%" y="847.50"></text></g><g><title>[[heap]] (5 samples, 0.81%)</title><rect x="0.0000%" y="853" width="0.8130%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="863.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="0.6504%" y="837" width="0.1626%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.9004%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="0.8130%" y="837" width="0.1626%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="1.0630%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="0.9756%" y="837" width="0.1626%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="1"/><text x="1.2256%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.16%)</title><rect x="1.1382%" y="837" width="0.1626%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="1"/><text x="1.3882%" y="847.50"></text></g><g><title>core::slice::memchr::memchr_general_case (5 samples, 0.81%)</title><rect x="1.3008%" y="837" width="0.8130%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="5"/><text x="1.5508%" y="847.50"></text></g><g><title>[anon] (10 samples, 1.63%)</title><rect x="0.8130%" y="853" width="1.6260%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="10"/><text x="1.0630%" y="863.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (2 samples, 0.33%)</title><rect x="2.1138%" y="837" width="0.3252%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="2"/><text x="2.3638%" y="847.50"></text></g><g><title>[lab4] (2 samples, 0.33%)</title><rect x="2.4390%" y="853" width="0.3252%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="2"/><text x="2.6890%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (2 samples, 0.33%)</title><rect x="2.4390%" y="837" width="0.3252%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="2"/><text x="2.6890%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.33%)</title><rect x="4.0650%" y="757" width="0.3252%" height="15" fill="rgb(206,188,39)" fg:x="25" fg:w="2"/><text x="4.3150%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.33%)</title><rect x="4.0650%" y="741" width="0.3252%" height="15" fill="rgb(217,207,13)" fg:x="25" fg:w="2"/><text x="4.3150%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.33%)</title><rect x="4.0650%" y="725" width="0.3252%" height="15" fill="rgb(231,73,38)" fg:x="25" fg:w="2"/><text x="4.3150%" y="735.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.79%)</title><rect x="3.0894%" y="837" width="1.7886%" height="15" fill="rgb(225,20,46)" fg:x="19" fg:w="11"/><text x="3.3394%" y="847.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.79%)</title><rect x="3.0894%" y="821" width="1.7886%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="11"/><text x="3.3394%" y="831.50">&lt;..</text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.79%)</title><rect x="3.0894%" y="805" width="1.7886%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="11"/><text x="3.3394%" y="815.50">&lt;..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (11 samples, 1.79%)</title><rect x="3.0894%" y="789" width="1.7886%" height="15" fill="rgb(226,26,5)" fg:x="19" fg:w="11"/><text x="3.3394%" y="799.50">c..</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.81%)</title><rect x="4.0650%" y="773" width="0.8130%" height="15" fill="rgb(249,33,26)" fg:x="25" fg:w="5"/><text x="4.3150%" y="783.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.49%)</title><rect x="4.3902%" y="757" width="0.4878%" height="15" fill="rgb(235,183,28)" fg:x="27" fg:w="3"/><text x="4.6402%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="837" width="0.3252%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="2"/><text x="5.1280%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="821" width="0.3252%" height="15" fill="rgb(247,18,42)" fg:x="30" fg:w="2"/><text x="5.1280%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="805" width="0.3252%" height="15" fill="rgb(241,131,45)" fg:x="30" fg:w="2"/><text x="5.1280%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="789" width="0.3252%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="2"/><text x="5.1280%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="773" width="0.3252%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="2"/><text x="5.1280%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="757" width="0.3252%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="2"/><text x="5.1280%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="741" width="0.3252%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="2"/><text x="5.1280%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="4.8780%" y="725" width="0.3252%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="2"/><text x="5.1280%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="5.0407%" y="709" width="0.1626%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="1"/><text x="5.2907%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="5.0407%" y="693" width="0.1626%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="1"/><text x="5.2907%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="5.0407%" y="677" width="0.1626%" height="15" fill="rgb(213,181,19)" fg:x="31" fg:w="1"/><text x="5.2907%" y="687.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.16%)</title><rect x="5.2033%" y="837" width="0.1626%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="1"/><text x="5.4533%" y="847.50"></text></g><g><title>__libc_open64 (1 samples, 0.16%)</title><rect x="5.3659%" y="837" width="0.1626%" height="15" fill="rgb(241,83,37)" fg:x="33" fg:w="1"/><text x="5.6159%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="5.3659%" y="821" width="0.1626%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="1"/><text x="5.6159%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="5.5285%" y="837" width="0.1626%" height="15" fill="rgb(226,3,54)" fg:x="34" fg:w="1"/><text x="5.7785%" y="847.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="5.6911%" y="837" width="0.3252%" height="15" fill="rgb(245,192,40)" fg:x="35" fg:w="2"/><text x="5.9411%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.16%)</title><rect x="6.0163%" y="837" width="0.1626%" height="15" fill="rgb(238,167,29)" fg:x="37" fg:w="1"/><text x="6.2663%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (1 samples, 0.16%)</title><rect x="6.1789%" y="837" width="0.1626%" height="15" fill="rgb(232,182,51)" fg:x="38" fg:w="1"/><text x="6.4289%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.16%)</title><rect x="6.3415%" y="837" width="0.1626%" height="15" fill="rgb(231,60,39)" fg:x="39" fg:w="1"/><text x="6.5915%" y="847.50"></text></g><g><title>lab4::package::PackageDownloader::run (1 samples, 0.16%)</title><rect x="6.5041%" y="837" width="0.1626%" height="15" fill="rgb(208,69,12)" fg:x="40" fg:w="1"/><text x="6.7541%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (1 samples, 0.16%)</title><rect x="6.5041%" y="821" width="0.1626%" height="15" fill="rgb(235,93,37)" fg:x="40" fg:w="1"/><text x="6.7541%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (1 samples, 0.16%)</title><rect x="6.5041%" y="805" width="0.1626%" height="15" fill="rgb(213,116,39)" fg:x="40" fg:w="1"/><text x="6.7541%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (1 samples, 0.16%)</title><rect x="6.5041%" y="789" width="0.1626%" height="15" fill="rgb(222,207,29)" fg:x="40" fg:w="1"/><text x="6.7541%" y="799.50"></text></g><g><title>[unknown] (25 samples, 4.07%)</title><rect x="2.7642%" y="853" width="4.0650%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="25"/><text x="3.0142%" y="863.50">[unk..</text></g><g><title>lab4::student::Student::run (1 samples, 0.16%)</title><rect x="6.6667%" y="837" width="0.1626%" height="15" fill="rgb(218,138,4)" fg:x="41" fg:w="1"/><text x="6.9167%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="837" width="0.8130%" height="15" fill="rgb(250,191,14)" fg:x="42" fg:w="5"/><text x="7.0793%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="821" width="0.8130%" height="15" fill="rgb(239,60,40)" fg:x="42" fg:w="5"/><text x="7.0793%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="805" width="0.8130%" height="15" fill="rgb(206,27,48)" fg:x="42" fg:w="5"/><text x="7.0793%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="789" width="0.8130%" height="15" fill="rgb(225,35,8)" fg:x="42" fg:w="5"/><text x="7.0793%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="773" width="0.8130%" height="15" fill="rgb(250,213,24)" fg:x="42" fg:w="5"/><text x="7.0793%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="757" width="0.8130%" height="15" fill="rgb(247,123,22)" fg:x="42" fg:w="5"/><text x="7.0793%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="741" width="0.8130%" height="15" fill="rgb(231,138,38)" fg:x="42" fg:w="5"/><text x="7.0793%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="6.8293%" y="725" width="0.8130%" height="15" fill="rgb(231,145,46)" fg:x="42" fg:w="5"/><text x="7.0793%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="821" width="0.8130%" height="15" fill="rgb(251,118,11)" fg:x="47" fg:w="5"/><text x="7.8923%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="805" width="0.8130%" height="15" fill="rgb(217,147,25)" fg:x="47" fg:w="5"/><text x="7.8923%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="789" width="0.8130%" height="15" fill="rgb(247,81,37)" fg:x="47" fg:w="5"/><text x="7.8923%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="773" width="0.8130%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="5"/><text x="7.8923%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="757" width="0.8130%" height="15" fill="rgb(227,1,9)" fg:x="47" fg:w="5"/><text x="7.8923%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="741" width="0.8130%" height="15" fill="rgb(248,47,43)" fg:x="47" fg:w="5"/><text x="7.8923%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="725" width="0.8130%" height="15" fill="rgb(221,10,30)" fg:x="47" fg:w="5"/><text x="7.8923%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="709" width="0.8130%" height="15" fill="rgb(210,229,1)" fg:x="47" fg:w="5"/><text x="7.8923%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="693" width="0.8130%" height="15" fill="rgb(222,148,37)" fg:x="47" fg:w="5"/><text x="7.8923%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="677" width="0.8130%" height="15" fill="rgb(234,67,33)" fg:x="47" fg:w="5"/><text x="7.8923%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="7.6423%" y="661" width="0.8130%" height="15" fill="rgb(247,98,35)" fg:x="47" fg:w="5"/><text x="7.8923%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="7.8049%" y="645" width="0.6504%" height="15" fill="rgb(247,138,52)" fg:x="48" fg:w="4"/><text x="8.0549%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="7.8049%" y="629" width="0.6504%" height="15" fill="rgb(213,79,30)" fg:x="48" fg:w="4"/><text x="8.0549%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="7.8049%" y="613" width="0.6504%" height="15" fill="rgb(246,177,23)" fg:x="48" fg:w="4"/><text x="8.0549%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="7.8049%" y="597" width="0.6504%" height="15" fill="rgb(230,62,27)" fg:x="48" fg:w="4"/><text x="8.0549%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (5 samples, 0.81%)</title><rect x="8.4553%" y="613" width="0.8130%" height="15" fill="rgb(216,154,8)" fg:x="52" fg:w="5"/><text x="8.7053%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (5 samples, 0.81%)</title><rect x="8.4553%" y="597" width="0.8130%" height="15" fill="rgb(244,35,45)" fg:x="52" fg:w="5"/><text x="8.7053%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (5 samples, 0.81%)</title><rect x="8.4553%" y="581" width="0.8130%" height="15" fill="rgb(251,115,12)" fg:x="52" fg:w="5"/><text x="8.7053%" y="591.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (5 samples, 0.81%)</title><rect x="8.4553%" y="565" width="0.8130%" height="15" fill="rgb(240,54,50)" fg:x="52" fg:w="5"/><text x="8.7053%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (5 samples, 0.81%)</title><rect x="8.4553%" y="549" width="0.8130%" height="15" fill="rgb(233,84,52)" fg:x="52" fg:w="5"/><text x="8.7053%" y="559.50"></text></g><g><title>core::hint::spin_loop (5 samples, 0.81%)</title><rect x="8.4553%" y="533" width="0.8130%" height="15" fill="rgb(207,117,47)" fg:x="52" fg:w="5"/><text x="8.7053%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (5 samples, 0.81%)</title><rect x="8.4553%" y="517" width="0.8130%" height="15" fill="rgb(249,43,39)" fg:x="52" fg:w="5"/><text x="8.7053%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.16%)</title><rect x="9.2683%" y="437" width="0.1626%" height="15" fill="rgb(209,38,44)" fg:x="57" fg:w="1"/><text x="9.5183%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="597" width="0.4878%" height="15" fill="rgb(236,212,23)" fg:x="57" fg:w="3"/><text x="9.5183%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="9.2683%" y="581" width="0.4878%" height="15" fill="rgb(242,79,21)" fg:x="57" fg:w="3"/><text x="9.5183%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="565" width="0.4878%" height="15" fill="rgb(211,96,35)" fg:x="57" fg:w="3"/><text x="9.5183%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="549" width="0.4878%" height="15" fill="rgb(253,215,40)" fg:x="57" fg:w="3"/><text x="9.5183%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="533" width="0.4878%" height="15" fill="rgb(211,81,21)" fg:x="57" fg:w="3"/><text x="9.5183%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="517" width="0.4878%" height="15" fill="rgb(208,190,38)" fg:x="57" fg:w="3"/><text x="9.5183%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.49%)</title><rect x="9.2683%" y="501" width="0.4878%" height="15" fill="rgb(235,213,38)" fg:x="57" fg:w="3"/><text x="9.5183%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.49%)</title><rect x="9.2683%" y="485" width="0.4878%" height="15" fill="rgb(237,122,38)" fg:x="57" fg:w="3"/><text x="9.5183%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.49%)</title><rect x="9.2683%" y="469" width="0.4878%" height="15" fill="rgb(244,218,35)" fg:x="57" fg:w="3"/><text x="9.5183%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.49%)</title><rect x="9.2683%" y="453" width="0.4878%" height="15" fill="rgb(240,68,47)" fg:x="57" fg:w="3"/><text x="9.5183%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.33%)</title><rect x="9.4309%" y="437" width="0.3252%" height="15" fill="rgb(210,16,53)" fg:x="58" fg:w="2"/><text x="9.6809%" y="447.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.0813%" y="437" width="0.1626%" height="15" fill="rgb(235,124,12)" fg:x="62" fg:w="1"/><text x="10.3313%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.0813%" y="421" width="0.1626%" height="15" fill="rgb(224,169,11)" fg:x="62" fg:w="1"/><text x="10.3313%" y="431.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.0813%" y="405" width="0.1626%" height="15" fill="rgb(250,166,2)" fg:x="62" fg:w="1"/><text x="10.3313%" y="415.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.16%)</title><rect x="10.0813%" y="389" width="0.1626%" height="15" fill="rgb(242,216,29)" fg:x="62" fg:w="1"/><text x="10.3313%" y="399.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.16%)</title><rect x="10.0813%" y="373" width="0.1626%" height="15" fill="rgb(230,116,27)" fg:x="62" fg:w="1"/><text x="10.3313%" y="383.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.16%)</title><rect x="10.0813%" y="357" width="0.1626%" height="15" fill="rgb(228,99,48)" fg:x="62" fg:w="1"/><text x="10.3313%" y="367.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.16%)</title><rect x="10.0813%" y="341" width="0.1626%" height="15" fill="rgb(253,11,6)" fg:x="62" fg:w="1"/><text x="10.3313%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.81%)</title><rect x="9.7561%" y="517" width="0.8130%" height="15" fill="rgb(247,143,39)" fg:x="60" fg:w="5"/><text x="10.0061%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.81%)</title><rect x="9.7561%" y="501" width="0.8130%" height="15" fill="rgb(236,97,10)" fg:x="60" fg:w="5"/><text x="10.0061%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="10.0813%" y="485" width="0.4878%" height="15" fill="rgb(233,208,19)" fg:x="62" fg:w="3"/><text x="10.3313%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="10.0813%" y="469" width="0.4878%" height="15" fill="rgb(216,164,2)" fg:x="62" fg:w="3"/><text x="10.3313%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="10.0813%" y="453" width="0.4878%" height="15" fill="rgb(220,129,5)" fg:x="62" fg:w="3"/><text x="10.3313%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="10.2439%" y="437" width="0.3252%" height="15" fill="rgb(242,17,10)" fg:x="63" fg:w="2"/><text x="10.4939%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.33%)</title><rect x="10.2439%" y="421" width="0.3252%" height="15" fill="rgb(242,107,0)" fg:x="63" fg:w="2"/><text x="10.4939%" y="431.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (2 samples, 0.33%)</title><rect x="10.2439%" y="405" width="0.3252%" height="15" fill="rgb(251,28,31)" fg:x="63" fg:w="2"/><text x="10.4939%" y="415.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.33%)</title><rect x="10.2439%" y="389" width="0.3252%" height="15" fill="rgb(233,223,10)" fg:x="63" fg:w="2"/><text x="10.4939%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.33%)</title><rect x="10.2439%" y="373" width="0.3252%" height="15" fill="rgb(215,21,27)" fg:x="63" fg:w="2"/><text x="10.4939%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.33%)</title><rect x="10.2439%" y="357" width="0.3252%" height="15" fill="rgb(232,23,21)" fg:x="63" fg:w="2"/><text x="10.4939%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.33%)</title><rect x="10.2439%" y="341" width="0.3252%" height="15" fill="rgb(244,5,23)" fg:x="63" fg:w="2"/><text x="10.4939%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.33%)</title><rect x="10.2439%" y="325" width="0.3252%" height="15" fill="rgb(226,81,46)" fg:x="63" fg:w="2"/><text x="10.4939%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.33%)</title><rect x="10.2439%" y="309" width="0.3252%" height="15" fill="rgb(247,70,30)" fg:x="63" fg:w="2"/><text x="10.4939%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="10.2439%" y="293" width="0.3252%" height="15" fill="rgb(212,68,19)" fg:x="63" fg:w="2"/><text x="10.4939%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="10.2439%" y="277" width="0.3252%" height="15" fill="rgb(240,187,13)" fg:x="63" fg:w="2"/><text x="10.4939%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.33%)</title><rect x="10.2439%" y="261" width="0.3252%" height="15" fill="rgb(223,113,26)" fg:x="63" fg:w="2"/><text x="10.4939%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.33%)</title><rect x="10.2439%" y="245" width="0.3252%" height="15" fill="rgb(206,192,2)" fg:x="63" fg:w="2"/><text x="10.4939%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.33%)</title><rect x="10.2439%" y="229" width="0.3252%" height="15" fill="rgb(241,108,4)" fg:x="63" fg:w="2"/><text x="10.4939%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.33%)</title><rect x="10.2439%" y="213" width="0.3252%" height="15" fill="rgb(247,173,49)" fg:x="63" fg:w="2"/><text x="10.4939%" y="223.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="10.2439%" y="197" width="0.3252%" height="15" fill="rgb(224,114,35)" fg:x="63" fg:w="2"/><text x="10.4939%" y="207.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (6 samples, 0.98%)</title><rect x="9.7561%" y="597" width="0.9756%" height="15" fill="rgb(245,159,27)" fg:x="60" fg:w="6"/><text x="10.0061%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.98%)</title><rect x="9.7561%" y="581" width="0.9756%" height="15" fill="rgb(245,172,44)" fg:x="60" fg:w="6"/><text x="10.0061%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.98%)</title><rect x="9.7561%" y="565" width="0.9756%" height="15" fill="rgb(236,23,11)" fg:x="60" fg:w="6"/><text x="10.0061%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.98%)</title><rect x="9.7561%" y="549" width="0.9756%" height="15" fill="rgb(205,117,38)" fg:x="60" fg:w="6"/><text x="10.0061%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.98%)</title><rect x="9.7561%" y="533" width="0.9756%" height="15" fill="rgb(237,72,25)" fg:x="60" fg:w="6"/><text x="10.0061%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.5691%" y="517" width="0.1626%" height="15" fill="rgb(244,70,9)" fg:x="65" fg:w="1"/><text x="10.8191%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.5691%" y="501" width="0.1626%" height="15" fill="rgb(217,125,39)" fg:x="65" fg:w="1"/><text x="10.8191%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="10.5691%" y="485" width="0.1626%" height="15" fill="rgb(235,36,10)" fg:x="65" fg:w="1"/><text x="10.8191%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="10.5691%" y="469" width="0.1626%" height="15" fill="rgb(251,123,47)" fg:x="65" fg:w="1"/><text x="10.8191%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="10.5691%" y="453" width="0.1626%" height="15" fill="rgb(221,13,13)" fg:x="65" fg:w="1"/><text x="10.8191%" y="463.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (1 samples, 0.16%)</title><rect x="10.5691%" y="437" width="0.1626%" height="15" fill="rgb(238,131,9)" fg:x="65" fg:w="1"/><text x="10.8191%" y="447.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.16%)</title><rect x="10.5691%" y="421" width="0.1626%" height="15" fill="rgb(211,50,8)" fg:x="65" fg:w="1"/><text x="10.8191%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.16%)</title><rect x="10.5691%" y="405" width="0.1626%" height="15" fill="rgb(245,182,24)" fg:x="65" fg:w="1"/><text x="10.8191%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.16%)</title><rect x="10.5691%" y="389" width="0.1626%" height="15" fill="rgb(242,14,37)" fg:x="65" fg:w="1"/><text x="10.8191%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="10.5691%" y="373" width="0.1626%" height="15" fill="rgb(246,228,12)" fg:x="65" fg:w="1"/><text x="10.8191%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="10.5691%" y="357" width="0.1626%" height="15" fill="rgb(213,55,15)" fg:x="65" fg:w="1"/><text x="10.8191%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="10.5691%" y="341" width="0.1626%" height="15" fill="rgb(209,9,3)" fg:x="65" fg:w="1"/><text x="10.8191%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="10.5691%" y="325" width="0.1626%" height="15" fill="rgb(230,59,30)" fg:x="65" fg:w="1"/><text x="10.8191%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="10.5691%" y="309" width="0.1626%" height="15" fill="rgb(209,121,21)" fg:x="65" fg:w="1"/><text x="10.8191%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="10.5691%" y="293" width="0.1626%" height="15" fill="rgb(220,109,13)" fg:x="65" fg:w="1"/><text x="10.8191%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="10.5691%" y="277" width="0.1626%" height="15" fill="rgb(232,18,1)" fg:x="65" fg:w="1"/><text x="10.8191%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="10.5691%" y="261" width="0.1626%" height="15" fill="rgb(215,41,42)" fg:x="65" fg:w="1"/><text x="10.8191%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="10.5691%" y="245" width="0.1626%" height="15" fill="rgb(224,123,36)" fg:x="65" fg:w="1"/><text x="10.8191%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="10.5691%" y="229" width="0.1626%" height="15" fill="rgb(240,125,3)" fg:x="65" fg:w="1"/><text x="10.8191%" y="239.50"></text></g><g><title>tcache_get (1 samples, 0.16%)</title><rect x="10.5691%" y="213" width="0.1626%" height="15" fill="rgb(205,98,50)" fg:x="65" fg:w="1"/><text x="10.8191%" y="223.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.16%)</title><rect x="10.7317%" y="565" width="0.1626%" height="15" fill="rgb(205,185,37)" fg:x="66" fg:w="1"/><text x="10.9817%" y="575.50"></text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.16%)</title><rect x="10.7317%" y="549" width="0.1626%" height="15" fill="rgb(238,207,15)" fg:x="66" fg:w="1"/><text x="10.9817%" y="559.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.16%)</title><rect x="10.7317%" y="533" width="0.1626%" height="15" fill="rgb(213,199,42)" fg:x="66" fg:w="1"/><text x="10.9817%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (1 samples, 0.16%)</title><rect x="10.7317%" y="517" width="0.1626%" height="15" fill="rgb(235,201,11)" fg:x="66" fg:w="1"/><text x="10.9817%" y="527.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.16%)</title><rect x="10.7317%" y="501" width="0.1626%" height="15" fill="rgb(207,46,11)" fg:x="66" fg:w="1"/><text x="10.9817%" y="511.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.16%)</title><rect x="10.7317%" y="485" width="0.1626%" height="15" fill="rgb(241,35,35)" fg:x="66" fg:w="1"/><text x="10.9817%" y="495.50"></text></g><g><title>statx (1 samples, 0.16%)</title><rect x="10.7317%" y="469" width="0.1626%" height="15" fill="rgb(243,32,47)" fg:x="66" fg:w="1"/><text x="10.9817%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="453" width="0.1626%" height="15" fill="rgb(247,202,23)" fg:x="66" fg:w="1"/><text x="10.9817%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="437" width="0.1626%" height="15" fill="rgb(219,102,11)" fg:x="66" fg:w="1"/><text x="10.9817%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="421" width="0.1626%" height="15" fill="rgb(243,110,44)" fg:x="66" fg:w="1"/><text x="10.9817%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="405" width="0.1626%" height="15" fill="rgb(222,74,54)" fg:x="66" fg:w="1"/><text x="10.9817%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="389" width="0.1626%" height="15" fill="rgb(216,99,12)" fg:x="66" fg:w="1"/><text x="10.9817%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="373" width="0.1626%" height="15" fill="rgb(226,22,26)" fg:x="66" fg:w="1"/><text x="10.9817%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="357" width="0.1626%" height="15" fill="rgb(217,163,10)" fg:x="66" fg:w="1"/><text x="10.9817%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="10.7317%" y="341" width="0.1626%" height="15" fill="rgb(213,25,53)" fg:x="66" fg:w="1"/><text x="10.9817%" y="351.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (33 samples, 5.37%)</title><rect x="8.4553%" y="629" width="5.3659%" height="15" fill="rgb(252,105,26)" fg:x="52" fg:w="33"/><text x="8.7053%" y="639.50">lab4::i..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (28 samples, 4.55%)</title><rect x="9.2683%" y="613" width="4.5528%" height="15" fill="rgb(220,39,43)" fg:x="57" fg:w="28"/><text x="9.5183%" y="623.50">lab4:..</text></g><g><title>std::fs::read_to_string (19 samples, 3.09%)</title><rect x="10.7317%" y="597" width="3.0894%" height="15" fill="rgb(229,68,48)" fg:x="66" fg:w="19"/><text x="10.9817%" y="607.50">std..</text></g><g><title>std::fs::read_to_string::inner (19 samples, 3.09%)</title><rect x="10.7317%" y="581" width="3.0894%" height="15" fill="rgb(252,8,32)" fg:x="66" fg:w="19"/><text x="10.9817%" y="591.50">std..</text></g><g><title>std::fs::File::open (18 samples, 2.93%)</title><rect x="10.8943%" y="565" width="2.9268%" height="15" fill="rgb(223,20,43)" fg:x="67" fg:w="18"/><text x="11.1443%" y="575.50">st..</text></g><g><title>std::fs::OpenOptions::open (18 samples, 2.93%)</title><rect x="10.8943%" y="549" width="2.9268%" height="15" fill="rgb(229,81,49)" fg:x="67" fg:w="18"/><text x="11.1443%" y="559.50">st..</text></g><g><title>std::fs::OpenOptions::_open (18 samples, 2.93%)</title><rect x="10.8943%" y="533" width="2.9268%" height="15" fill="rgb(236,28,36)" fg:x="67" fg:w="18"/><text x="11.1443%" y="543.50">st..</text></g><g><title>std::sys::unix::fs::File::open (18 samples, 2.93%)</title><rect x="10.8943%" y="517" width="2.9268%" height="15" fill="rgb(249,185,26)" fg:x="67" fg:w="18"/><text x="11.1443%" y="527.50">st..</text></g><g><title>std::sys::unix::fs::File::open_c (18 samples, 2.93%)</title><rect x="10.8943%" y="501" width="2.9268%" height="15" fill="rgb(249,174,33)" fg:x="67" fg:w="18"/><text x="11.1443%" y="511.50">st..</text></g><g><title>std::sys::unix::cvt_r (18 samples, 2.93%)</title><rect x="10.8943%" y="485" width="2.9268%" height="15" fill="rgb(233,201,37)" fg:x="67" fg:w="18"/><text x="11.1443%" y="495.50">st..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (18 samples, 2.93%)</title><rect x="10.8943%" y="469" width="2.9268%" height="15" fill="rgb(221,78,26)" fg:x="67" fg:w="18"/><text x="11.1443%" y="479.50">st..</text></g><g><title>__libc_open64 (18 samples, 2.93%)</title><rect x="10.8943%" y="453" width="2.9268%" height="15" fill="rgb(250,127,30)" fg:x="67" fg:w="18"/><text x="11.1443%" y="463.50">__..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="437" width="2.9268%" height="15" fill="rgb(230,49,44)" fg:x="67" fg:w="18"/><text x="11.1443%" y="447.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="421" width="2.9268%" height="15" fill="rgb(229,67,23)" fg:x="67" fg:w="18"/><text x="11.1443%" y="431.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="405" width="2.9268%" height="15" fill="rgb(249,83,47)" fg:x="67" fg:w="18"/><text x="11.1443%" y="415.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="389" width="2.9268%" height="15" fill="rgb(215,43,3)" fg:x="67" fg:w="18"/><text x="11.1443%" y="399.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="373" width="2.9268%" height="15" fill="rgb(238,154,13)" fg:x="67" fg:w="18"/><text x="11.1443%" y="383.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="357" width="2.9268%" height="15" fill="rgb(219,56,2)" fg:x="67" fg:w="18"/><text x="11.1443%" y="367.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="341" width="2.9268%" height="15" fill="rgb(233,0,4)" fg:x="67" fg:w="18"/><text x="11.1443%" y="351.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="325" width="2.9268%" height="15" fill="rgb(235,30,7)" fg:x="67" fg:w="18"/><text x="11.1443%" y="335.50">[u..</text></g><g><title>[unknown] (18 samples, 2.93%)</title><rect x="10.8943%" y="309" width="2.9268%" height="15" fill="rgb(250,79,13)" fg:x="67" fg:w="18"/><text x="11.1443%" y="319.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="293" width="2.7642%" height="15" fill="rgb(211,146,34)" fg:x="68" fg:w="17"/><text x="11.3069%" y="303.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="277" width="2.7642%" height="15" fill="rgb(228,22,38)" fg:x="68" fg:w="17"/><text x="11.3069%" y="287.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="261" width="2.7642%" height="15" fill="rgb(235,168,5)" fg:x="68" fg:w="17"/><text x="11.3069%" y="271.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="245" width="2.7642%" height="15" fill="rgb(221,155,16)" fg:x="68" fg:w="17"/><text x="11.3069%" y="255.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="229" width="2.7642%" height="15" fill="rgb(215,215,53)" fg:x="68" fg:w="17"/><text x="11.3069%" y="239.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="213" width="2.7642%" height="15" fill="rgb(223,4,10)" fg:x="68" fg:w="17"/><text x="11.3069%" y="223.50">[u..</text></g><g><title>[unknown] (17 samples, 2.76%)</title><rect x="11.0569%" y="197" width="2.7642%" height="15" fill="rgb(234,103,6)" fg:x="68" fg:w="17"/><text x="11.3069%" y="207.50">[u..</text></g><g><title>[unknown] (16 samples, 2.60%)</title><rect x="11.2195%" y="181" width="2.6016%" height="15" fill="rgb(227,97,0)" fg:x="69" fg:w="16"/><text x="11.4695%" y="191.50">[u..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="165" width="1.7886%" height="15" fill="rgb(234,150,53)" fg:x="74" fg:w="11"/><text x="12.2825%" y="175.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="149" width="1.7886%" height="15" fill="rgb(228,201,54)" fg:x="74" fg:w="11"/><text x="12.2825%" y="159.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="133" width="1.7886%" height="15" fill="rgb(222,22,37)" fg:x="74" fg:w="11"/><text x="12.2825%" y="143.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="117" width="1.7886%" height="15" fill="rgb(237,53,32)" fg:x="74" fg:w="11"/><text x="12.2825%" y="127.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="101" width="1.7886%" height="15" fill="rgb(233,25,53)" fg:x="74" fg:w="11"/><text x="12.2825%" y="111.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="12.0325%" y="85" width="1.7886%" height="15" fill="rgb(210,40,34)" fg:x="74" fg:w="11"/><text x="12.2825%" y="95.50">[..</text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="12.1951%" y="69" width="1.6260%" height="15" fill="rgb(241,220,44)" fg:x="75" fg:w="10"/><text x="12.4451%" y="79.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="12.1951%" y="53" width="1.6260%" height="15" fill="rgb(235,28,35)" fg:x="75" fg:w="10"/><text x="12.4451%" y="63.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="12.1951%" y="37" width="1.6260%" height="15" fill="rgb(210,56,17)" fg:x="75" fg:w="10"/><text x="12.4451%" y="47.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.98%)</title><rect x="18.3740%" y="485" width="0.9756%" height="15" fill="rgb(224,130,29)" fg:x="113" fg:w="6"/><text x="18.6240%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.98%)</title><rect x="18.3740%" y="469" width="0.9756%" height="15" fill="rgb(235,212,8)" fg:x="113" fg:w="6"/><text x="18.6240%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.98%)</title><rect x="18.3740%" y="453" width="0.9756%" height="15" fill="rgb(223,33,50)" fg:x="113" fg:w="6"/><text x="18.6240%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.81%)</title><rect x="18.5366%" y="437" width="0.8130%" height="15" fill="rgb(219,149,13)" fg:x="114" fg:w="5"/><text x="18.7866%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (9 samples, 1.46%)</title><rect x="19.3496%" y="485" width="1.4634%" height="15" fill="rgb(250,156,29)" fg:x="119" fg:w="9"/><text x="19.5996%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (9 samples, 1.46%)</title><rect x="19.3496%" y="469" width="1.4634%" height="15" fill="rgb(216,193,19)" fg:x="119" fg:w="9"/><text x="19.5996%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.16%)</title><rect x="20.8130%" y="469" width="0.1626%" height="15" fill="rgb(216,135,14)" fg:x="128" fg:w="1"/><text x="21.0630%" y="479.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (1 samples, 0.16%)</title><rect x="20.8130%" y="453" width="0.1626%" height="15" fill="rgb(241,47,5)" fg:x="128" fg:w="1"/><text x="21.0630%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.63%)</title><rect x="29.7561%" y="437" width="1.6260%" height="15" fill="rgb(233,42,35)" fg:x="183" fg:w="10"/><text x="30.0061%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="31.3821%" y="437" width="0.3252%" height="15" fill="rgb(231,13,6)" fg:x="193" fg:w="2"/><text x="31.6321%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="31.3821%" y="421" width="0.3252%" height="15" fill="rgb(207,181,40)" fg:x="193" fg:w="2"/><text x="31.6321%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="405" width="0.1626%" height="15" fill="rgb(254,173,49)" fg:x="194" fg:w="1"/><text x="31.7947%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="389" width="0.1626%" height="15" fill="rgb(221,1,38)" fg:x="194" fg:w="1"/><text x="31.7947%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="373" width="0.1626%" height="15" fill="rgb(206,124,46)" fg:x="194" fg:w="1"/><text x="31.7947%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="357" width="0.1626%" height="15" fill="rgb(249,21,11)" fg:x="194" fg:w="1"/><text x="31.7947%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="341" width="0.1626%" height="15" fill="rgb(222,201,40)" fg:x="194" fg:w="1"/><text x="31.7947%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="325" width="0.1626%" height="15" fill="rgb(235,61,29)" fg:x="194" fg:w="1"/><text x="31.7947%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="309" width="0.1626%" height="15" fill="rgb(219,207,3)" fg:x="194" fg:w="1"/><text x="31.7947%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="293" width="0.1626%" height="15" fill="rgb(222,56,46)" fg:x="194" fg:w="1"/><text x="31.7947%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="31.5447%" y="277" width="0.1626%" height="15" fill="rgb(239,76,54)" fg:x="194" fg:w="1"/><text x="31.7947%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (55 samples, 8.94%)</title><rect x="26.9919%" y="453" width="8.9431%" height="15" fill="rgb(231,124,27)" fg:x="166" fg:w="55"/><text x="27.2419%" y="463.50">&lt;core::slice:..</text></g><g><title>core::slice::memchr::memchr_general_case::{{closure}} (26 samples, 4.23%)</title><rect x="31.7073%" y="437" width="4.2276%" height="15" fill="rgb(249,195,6)" fg:x="195" fg:w="26"/><text x="31.9573%" y="447.50">core:..</text></g><g><title>core::cmp::min (3 samples, 0.49%)</title><rect x="35.9350%" y="453" width="0.4878%" height="15" fill="rgb(237,174,47)" fg:x="221" fg:w="3"/><text x="36.1850%" y="463.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.49%)</title><rect x="35.9350%" y="437" width="0.4878%" height="15" fill="rgb(206,201,31)" fg:x="221" fg:w="3"/><text x="36.1850%" y="447.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.49%)</title><rect x="35.9350%" y="421" width="0.4878%" height="15" fill="rgb(231,57,52)" fg:x="221" fg:w="3"/><text x="36.1850%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 2.28%)</title><rect x="36.4228%" y="453" width="2.2764%" height="15" fill="rgb(248,177,22)" fg:x="224" fg:w="14"/><text x="36.6728%" y="463.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (2 samples, 0.33%)</title><rect x="38.6992%" y="453" width="0.3252%" height="15" fill="rgb(215,211,37)" fg:x="238" fg:w="2"/><text x="38.9492%" y="463.50"></text></g><g><title>core::ptr::align_offset (2 samples, 0.33%)</title><rect x="38.6992%" y="437" width="0.3252%" height="15" fill="rgb(241,128,51)" fg:x="238" fg:w="2"/><text x="38.9492%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.16%)</title><rect x="39.0244%" y="453" width="0.1626%" height="15" fill="rgb(227,165,31)" fg:x="240" fg:w="1"/><text x="39.2744%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.16%)</title><rect x="39.0244%" y="437" width="0.1626%" height="15" fill="rgb(228,167,24)" fg:x="240" fg:w="1"/><text x="39.2744%" y="447.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (2 samples, 0.33%)</title><rect x="39.1870%" y="453" width="0.3252%" height="15" fill="rgb(228,143,12)" fg:x="241" fg:w="2"/><text x="39.4370%" y="463.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 26.50%)</title><rect x="13.8211%" y="533" width="26.5041%" height="15" fill="rgb(249,149,8)" fg:x="85" fg:w="163"/><text x="14.0711%" y="543.50">&lt;core::str::iter::SplitTerminator&lt;P&gt; as co..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (163 samples, 26.50%)</title><rect x="13.8211%" y="517" width="26.5041%" height="15" fill="rgb(243,35,44)" fg:x="85" fg:w="163"/><text x="14.0711%" y="527.50">core::str::iter::SplitInternal&lt;P&gt;::next</text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (158 samples, 25.69%)</title><rect x="14.6341%" y="501" width="25.6911%" height="15" fill="rgb(246,89,9)" fg:x="90" fg:w="158"/><text x="14.8841%" y="511.50">&lt;core::str::pattern::CharSearcher as core..</text></g><g><title>core::slice::memchr::memchr (120 samples, 19.51%)</title><rect x="20.8130%" y="485" width="19.5122%" height="15" fill="rgb(233,213,13)" fg:x="128" fg:w="120"/><text x="21.0630%" y="495.50">core::slice::memchr::memchr</text></g><g><title>core::slice::memchr::memchr_general_case (119 samples, 19.35%)</title><rect x="20.9756%" y="469" width="19.3496%" height="15" fill="rgb(233,141,41)" fg:x="129" fg:w="119"/><text x="21.2256%" y="479.50">core::slice::memchr::memchr_ge..</text></g><g><title>core::slice::memchr::repeat_byte (5 samples, 0.81%)</title><rect x="39.5122%" y="453" width="0.8130%" height="15" fill="rgb(239,167,4)" fg:x="243" fg:w="5"/><text x="39.7622%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (172 samples, 27.97%)</title><rect x="13.8211%" y="613" width="27.9675%" height="15" fill="rgb(209,217,16)" fg:x="85" fg:w="172"/><text x="14.0711%" y="623.50">core::iter::traits::iterator::Iterator::nth</text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (172 samples, 27.97%)</title><rect x="13.8211%" y="597" width="27.9675%" height="15" fill="rgb(219,88,35)" fg:x="85" fg:w="172"/><text x="14.0711%" y="607.50">&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as cor..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (172 samples, 27.97%)</title><rect x="13.8211%" y="581" width="27.9675%" height="15" fill="rgb(220,193,23)" fg:x="85" fg:w="172"/><text x="14.0711%" y="591.50">core::iter::traits::iterator::Iterator::advan..</text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (172 samples, 27.97%)</title><rect x="13.8211%" y="565" width="27.9675%" height="15" fill="rgb(230,90,52)" fg:x="85" fg:w="172"/><text x="14.0711%" y="575.50">&lt;core::str::iter::Lines as core::iter::traits..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (172 samples, 27.97%)</title><rect x="13.8211%" y="549" width="27.9675%" height="15" fill="rgb(252,106,19)" fg:x="85" fg:w="172"/><text x="14.0711%" y="559.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 1.46%)</title><rect x="40.3252%" y="533" width="1.4634%" height="15" fill="rgb(206,74,20)" fg:x="248" fg:w="9"/><text x="40.5752%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 1.46%)</title><rect x="40.3252%" y="517" width="1.4634%" height="15" fill="rgb(230,138,44)" fg:x="248" fg:w="9"/><text x="40.5752%" y="527.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (9 samples, 1.46%)</title><rect x="40.3252%" y="501" width="1.4634%" height="15" fill="rgb(235,182,43)" fg:x="248" fg:w="9"/><text x="40.5752%" y="511.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (9 samples, 1.46%)</title><rect x="40.3252%" y="485" width="1.4634%" height="15" fill="rgb(242,16,51)" fg:x="248" fg:w="9"/><text x="40.5752%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (1 samples, 0.16%)</title><rect x="41.7886%" y="613" width="0.1626%" height="15" fill="rgb(248,9,4)" fg:x="257" fg:w="1"/><text x="42.0386%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="41.7886%" y="597" width="0.1626%" height="15" fill="rgb(210,31,22)" fg:x="257" fg:w="1"/><text x="42.0386%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.16%)</title><rect x="41.7886%" y="581" width="0.1626%" height="15" fill="rgb(239,54,39)" fg:x="257" fg:w="1"/><text x="42.0386%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.16%)</title><rect x="41.7886%" y="565" width="0.1626%" height="15" fill="rgb(230,99,41)" fg:x="257" fg:w="1"/><text x="42.0386%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.16%)</title><rect x="41.7886%" y="549" width="0.1626%" height="15" fill="rgb(253,106,12)" fg:x="257" fg:w="1"/><text x="42.0386%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.16%)</title><rect x="41.7886%" y="533" width="0.1626%" height="15" fill="rgb(213,46,41)" fg:x="257" fg:w="1"/><text x="42.0386%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="41.7886%" y="517" width="0.1626%" height="15" fill="rgb(215,133,35)" fg:x="257" fg:w="1"/><text x="42.0386%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="41.7886%" y="501" width="0.1626%" height="15" fill="rgb(213,28,5)" fg:x="257" fg:w="1"/><text x="42.0386%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="41.7886%" y="485" width="0.1626%" height="15" fill="rgb(215,77,49)" fg:x="257" fg:w="1"/><text x="42.0386%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="41.7886%" y="469" width="0.1626%" height="15" fill="rgb(248,100,22)" fg:x="257" fg:w="1"/><text x="42.0386%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="41.7886%" y="453" width="0.1626%" height="15" fill="rgb(208,67,9)" fg:x="257" fg:w="1"/><text x="42.0386%" y="463.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (31 samples, 5.04%)</title><rect x="41.9512%" y="613" width="5.0407%" height="15" fill="rgb(219,133,21)" fg:x="258" fg:w="31"/><text x="42.2012%" y="623.50">crossb..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (31 samples, 5.04%)</title><rect x="41.9512%" y="597" width="5.0407%" height="15" fill="rgb(246,46,29)" fg:x="258" fg:w="31"/><text x="42.2012%" y="607.50">crossb..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (31 samples, 5.04%)</title><rect x="41.9512%" y="581" width="5.0407%" height="15" fill="rgb(246,185,52)" fg:x="258" fg:w="31"/><text x="42.2012%" y="591.50">crossb..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (31 samples, 5.04%)</title><rect x="41.9512%" y="565" width="5.0407%" height="15" fill="rgb(252,136,11)" fg:x="258" fg:w="31"/><text x="42.2012%" y="575.50">crossb..</text></g><g><title>core::sync::atomic::spin_loop_hint (31 samples, 5.04%)</title><rect x="41.9512%" y="549" width="5.0407%" height="15" fill="rgb(219,138,53)" fg:x="258" fg:w="31"/><text x="42.2012%" y="559.50">core::..</text></g><g><title>core::hint::spin_loop (31 samples, 5.04%)</title><rect x="41.9512%" y="533" width="5.0407%" height="15" fill="rgb(211,51,23)" fg:x="258" fg:w="31"/><text x="42.2012%" y="543.50">core::..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (31 samples, 5.04%)</title><rect x="41.9512%" y="517" width="5.0407%" height="15" fill="rgb(247,221,28)" fg:x="258" fg:w="31"/><text x="42.2012%" y="527.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.16%)</title><rect x="46.9919%" y="597" width="0.1626%" height="15" fill="rgb(251,222,45)" fg:x="289" fg:w="1"/><text x="47.2419%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.16%)</title><rect x="46.9919%" y="581" width="0.1626%" height="15" fill="rgb(217,162,53)" fg:x="289" fg:w="1"/><text x="47.2419%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="46.9919%" y="565" width="0.1626%" height="15" fill="rgb(229,93,14)" fg:x="289" fg:w="1"/><text x="47.2419%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.16%)</title><rect x="46.9919%" y="549" width="0.1626%" height="15" fill="rgb(209,67,49)" fg:x="289" fg:w="1"/><text x="47.2419%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.16%)</title><rect x="46.9919%" y="533" width="0.1626%" height="15" fill="rgb(213,87,29)" fg:x="289" fg:w="1"/><text x="47.2419%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="46.9919%" y="517" width="0.1626%" height="15" fill="rgb(205,151,52)" fg:x="289" fg:w="1"/><text x="47.2419%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.33%)</title><rect x="47.3171%" y="405" width="0.3252%" height="15" fill="rgb(253,215,39)" fg:x="291" fg:w="2"/><text x="47.5671%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.33%)</title><rect x="47.3171%" y="389" width="0.3252%" height="15" fill="rgb(221,220,41)" fg:x="291" fg:w="2"/><text x="47.5671%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.33%)</title><rect x="47.3171%" y="373" width="0.3252%" height="15" fill="rgb(218,133,21)" fg:x="291" fg:w="2"/><text x="47.5671%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.33%)</title><rect x="47.3171%" y="357" width="0.3252%" height="15" fill="rgb(221,193,43)" fg:x="291" fg:w="2"/><text x="47.5671%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.33%)</title><rect x="47.3171%" y="341" width="0.3252%" height="15" fill="rgb(240,128,52)" fg:x="291" fg:w="2"/><text x="47.5671%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.33%)</title><rect x="47.3171%" y="325" width="0.3252%" height="15" fill="rgb(253,114,12)" fg:x="291" fg:w="2"/><text x="47.5671%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (2 samples, 0.33%)</title><rect x="47.3171%" y="309" width="0.3252%" height="15" fill="rgb(215,223,47)" fg:x="291" fg:w="2"/><text x="47.5671%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.33%)</title><rect x="47.3171%" y="293" width="0.3252%" height="15" fill="rgb(248,225,23)" fg:x="291" fg:w="2"/><text x="47.5671%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.33%)</title><rect x="47.3171%" y="277" width="0.3252%" height="15" fill="rgb(250,108,0)" fg:x="291" fg:w="2"/><text x="47.5671%" y="287.50"></text></g><g><title>hex::val (1 samples, 0.16%)</title><rect x="47.4797%" y="261" width="0.1626%" height="15" fill="rgb(228,208,7)" fg:x="292" fg:w="1"/><text x="47.7297%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.65%)</title><rect x="47.1545%" y="437" width="0.6504%" height="15" fill="rgb(244,45,10)" fg:x="290" fg:w="4"/><text x="47.4045%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.49%)</title><rect x="47.3171%" y="421" width="0.4878%" height="15" fill="rgb(207,125,25)" fg:x="291" fg:w="3"/><text x="47.5671%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="47.6423%" y="405" width="0.1626%" height="15" fill="rgb(210,195,18)" fg:x="293" fg:w="1"/><text x="47.8923%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="47.6423%" y="389" width="0.1626%" height="15" fill="rgb(249,80,12)" fg:x="293" fg:w="1"/><text x="47.8923%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="47.6423%" y="373" width="0.1626%" height="15" fill="rgb(221,65,9)" fg:x="293" fg:w="1"/><text x="47.8923%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="47.6423%" y="357" width="0.1626%" height="15" fill="rgb(235,49,36)" fg:x="293" fg:w="1"/><text x="47.8923%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="47.6423%" y="341" width="0.1626%" height="15" fill="rgb(225,32,20)" fg:x="293" fg:w="1"/><text x="47.8923%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="47.6423%" y="325" width="0.1626%" height="15" fill="rgb(215,141,46)" fg:x="293" fg:w="1"/><text x="47.8923%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="47.6423%" y="309" width="0.1626%" height="15" fill="rgb(250,160,47)" fg:x="293" fg:w="1"/><text x="47.8923%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="47.6423%" y="293" width="0.1626%" height="15" fill="rgb(216,222,40)" fg:x="293" fg:w="1"/><text x="47.8923%" y="303.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="47.6423%" y="277" width="0.1626%" height="15" fill="rgb(234,217,39)" fg:x="293" fg:w="1"/><text x="47.8923%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.16%)</title><rect x="47.8049%" y="437" width="0.1626%" height="15" fill="rgb(207,178,40)" fg:x="294" fg:w="1"/><text x="48.0549%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.16%)</title><rect x="47.8049%" y="421" width="0.1626%" height="15" fill="rgb(221,136,13)" fg:x="294" fg:w="1"/><text x="48.0549%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.16%)</title><rect x="47.8049%" y="405" width="0.1626%" height="15" fill="rgb(249,199,10)" fg:x="294" fg:w="1"/><text x="48.0549%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.16%)</title><rect x="47.8049%" y="389" width="0.1626%" height="15" fill="rgb(249,222,13)" fg:x="294" fg:w="1"/><text x="48.0549%" y="399.50"></text></g><g><title>hex::decode (7 samples, 1.14%)</title><rect x="47.1545%" y="597" width="1.1382%" height="15" fill="rgb(244,185,38)" fg:x="290" fg:w="7"/><text x="47.4045%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (7 samples, 1.14%)</title><rect x="47.1545%" y="581" width="1.1382%" height="15" fill="rgb(236,202,9)" fg:x="290" fg:w="7"/><text x="47.4045%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 1.14%)</title><rect x="47.1545%" y="565" width="1.1382%" height="15" fill="rgb(250,229,37)" fg:x="290" fg:w="7"/><text x="47.4045%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 1.14%)</title><rect x="47.1545%" y="549" width="1.1382%" height="15" fill="rgb(206,174,23)" fg:x="290" fg:w="7"/><text x="47.4045%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (7 samples, 1.14%)</title><rect x="47.1545%" y="533" width="1.1382%" height="15" fill="rgb(211,33,43)" fg:x="290" fg:w="7"/><text x="47.4045%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 1.14%)</title><rect x="47.1545%" y="517" width="1.1382%" height="15" fill="rgb(245,58,50)" fg:x="290" fg:w="7"/><text x="47.4045%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 1.14%)</title><rect x="47.1545%" y="501" width="1.1382%" height="15" fill="rgb(244,68,36)" fg:x="290" fg:w="7"/><text x="47.4045%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 1.14%)</title><rect x="47.1545%" y="485" width="1.1382%" height="15" fill="rgb(232,229,15)" fg:x="290" fg:w="7"/><text x="47.4045%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 1.14%)</title><rect x="47.1545%" y="469" width="1.1382%" height="15" fill="rgb(254,30,23)" fg:x="290" fg:w="7"/><text x="47.4045%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 1.14%)</title><rect x="47.1545%" y="453" width="1.1382%" height="15" fill="rgb(235,160,14)" fg:x="290" fg:w="7"/><text x="47.4045%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.33%)</title><rect x="47.9675%" y="437" width="0.3252%" height="15" fill="rgb(212,155,44)" fg:x="295" fg:w="2"/><text x="48.2175%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="47.9675%" y="421" width="0.3252%" height="15" fill="rgb(226,2,50)" fg:x="295" fg:w="2"/><text x="48.2175%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.33%)</title><rect x="47.9675%" y="405" width="0.3252%" height="15" fill="rgb(234,177,6)" fg:x="295" fg:w="2"/><text x="48.2175%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.33%)</title><rect x="47.9675%" y="389" width="0.3252%" height="15" fill="rgb(217,24,9)" fg:x="295" fg:w="2"/><text x="48.2175%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.33%)</title><rect x="47.9675%" y="373" width="0.3252%" height="15" fill="rgb(220,13,46)" fg:x="295" fg:w="2"/><text x="48.2175%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.33%)</title><rect x="47.9675%" y="357" width="0.3252%" height="15" fill="rgb(239,221,27)" fg:x="295" fg:w="2"/><text x="48.2175%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.33%)</title><rect x="47.9675%" y="341" width="0.3252%" height="15" fill="rgb(222,198,25)" fg:x="295" fg:w="2"/><text x="48.2175%" y="351.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.33%)</title><rect x="47.9675%" y="325" width="0.3252%" height="15" fill="rgb(211,99,13)" fg:x="295" fg:w="2"/><text x="48.2175%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.33%)</title><rect x="47.9675%" y="309" width="0.3252%" height="15" fill="rgb(232,111,31)" fg:x="295" fg:w="2"/><text x="48.2175%" y="319.50"></text></g><g><title>unlink_chunk (1 samples, 0.16%)</title><rect x="48.1301%" y="293" width="0.1626%" height="15" fill="rgb(245,82,37)" fg:x="296" fg:w="1"/><text x="48.3801%" y="303.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="48.2927%" y="469" width="0.1626%" height="15" fill="rgb(227,149,46)" fg:x="297" fg:w="1"/><text x="48.5427%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="48.2927%" y="453" width="0.1626%" height="15" fill="rgb(218,36,50)" fg:x="297" fg:w="1"/><text x="48.5427%" y="463.50"></text></g><g><title>lab4::checksum::Checksum::update (10 samples, 1.63%)</title><rect x="46.9919%" y="613" width="1.6260%" height="15" fill="rgb(226,80,48)" fg:x="289" fg:w="10"/><text x="47.2419%" y="623.50"></text></g><g><title>hex::encode (2 samples, 0.33%)</title><rect x="48.2927%" y="597" width="0.3252%" height="15" fill="rgb(238,224,15)" fg:x="297" fg:w="2"/><text x="48.5427%" y="607.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (2 samples, 0.33%)</title><rect x="48.2927%" y="581" width="0.3252%" height="15" fill="rgb(241,136,10)" fg:x="297" fg:w="2"/><text x="48.5427%" y="591.50"></text></g><g><title>hex::encode_to_iter (2 samples, 0.33%)</title><rect x="48.2927%" y="565" width="0.3252%" height="15" fill="rgb(208,32,45)" fg:x="297" fg:w="2"/><text x="48.5427%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.33%)</title><rect x="48.2927%" y="549" width="0.3252%" height="15" fill="rgb(207,135,9)" fg:x="297" fg:w="2"/><text x="48.5427%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="48.2927%" y="533" width="0.3252%" height="15" fill="rgb(206,86,44)" fg:x="297" fg:w="2"/><text x="48.5427%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.33%)</title><rect x="48.2927%" y="517" width="0.3252%" height="15" fill="rgb(245,177,15)" fg:x="297" fg:w="2"/><text x="48.5427%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.33%)</title><rect x="48.2927%" y="501" width="0.3252%" height="15" fill="rgb(206,64,50)" fg:x="297" fg:w="2"/><text x="48.5427%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.33%)</title><rect x="48.2927%" y="485" width="0.3252%" height="15" fill="rgb(234,36,40)" fg:x="297" fg:w="2"/><text x="48.5427%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.16%)</title><rect x="48.4553%" y="469" width="0.1626%" height="15" fill="rgb(213,64,8)" fg:x="298" fg:w="1"/><text x="48.7053%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.16%)</title><rect x="48.4553%" y="453" width="0.1626%" height="15" fill="rgb(210,75,36)" fg:x="298" fg:w="1"/><text x="48.7053%" y="463.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.16%)</title><rect x="48.4553%" y="437" width="0.1626%" height="15" fill="rgb(229,88,21)" fg:x="298" fg:w="1"/><text x="48.7053%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="48.4553%" y="421" width="0.1626%" height="15" fill="rgb(252,204,47)" fg:x="298" fg:w="1"/><text x="48.7053%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="48.4553%" y="405" width="0.1626%" height="15" fill="rgb(208,77,27)" fg:x="298" fg:w="1"/><text x="48.7053%" y="415.50"></text></g><g><title>sha2::sha256::soft::schedule (2 samples, 0.33%)</title><rect x="48.6179%" y="421" width="0.3252%" height="15" fill="rgb(221,76,26)" fg:x="299" fg:w="2"/><text x="48.8679%" y="431.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (2 samples, 0.33%)</title><rect x="48.6179%" y="405" width="0.3252%" height="15" fill="rgb(225,139,18)" fg:x="299" fg:w="2"/><text x="48.8679%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.16%)</title><rect x="48.7805%" y="389" width="0.1626%" height="15" fill="rgb(230,137,11)" fg:x="300" fg:w="1"/><text x="49.0305%" y="399.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (4 samples, 0.65%)</title><rect x="48.6179%" y="597" width="0.6504%" height="15" fill="rgb(212,28,1)" fg:x="299" fg:w="4"/><text x="48.8679%" y="607.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (4 samples, 0.65%)</title><rect x="48.6179%" y="581" width="0.6504%" height="15" fill="rgb(248,164,17)" fg:x="299" fg:w="4"/><text x="48.8679%" y="591.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (4 samples, 0.65%)</title><rect x="48.6179%" y="565" width="0.6504%" height="15" fill="rgb(222,171,42)" fg:x="299" fg:w="4"/><text x="48.8679%" y="575.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (4 samples, 0.65%)</title><rect x="48.6179%" y="549" width="0.6504%" height="15" fill="rgb(243,84,45)" fg:x="299" fg:w="4"/><text x="48.8679%" y="559.50"></text></g><g><title>sha2::sha256::Engine256::finish (4 samples, 0.65%)</title><rect x="48.6179%" y="533" width="0.6504%" height="15" fill="rgb(252,49,23)" fg:x="299" fg:w="4"/><text x="48.8679%" y="543.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (4 samples, 0.65%)</title><rect x="48.6179%" y="517" width="0.6504%" height="15" fill="rgb(215,19,7)" fg:x="299" fg:w="4"/><text x="48.8679%" y="527.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (4 samples, 0.65%)</title><rect x="48.6179%" y="501" width="0.6504%" height="15" fill="rgb(238,81,41)" fg:x="299" fg:w="4"/><text x="48.8679%" y="511.50"></text></g><g><title>sha2::sha256::compress256 (4 samples, 0.65%)</title><rect x="48.6179%" y="485" width="0.6504%" height="15" fill="rgb(210,199,37)" fg:x="299" fg:w="4"/><text x="48.8679%" y="495.50"></text></g><g><title>sha2::sha256::x86::compress (4 samples, 0.65%)</title><rect x="48.6179%" y="469" width="0.6504%" height="15" fill="rgb(244,192,49)" fg:x="299" fg:w="4"/><text x="48.8679%" y="479.50"></text></g><g><title>sha2::sha256::soft::compress (4 samples, 0.65%)</title><rect x="48.6179%" y="453" width="0.6504%" height="15" fill="rgb(226,211,11)" fg:x="299" fg:w="4"/><text x="48.8679%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (4 samples, 0.65%)</title><rect x="48.6179%" y="437" width="0.6504%" height="15" fill="rgb(236,162,54)" fg:x="299" fg:w="4"/><text x="48.8679%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.33%)</title><rect x="48.9431%" y="421" width="0.3252%" height="15" fill="rgb(220,229,9)" fg:x="301" fg:w="2"/><text x="49.1931%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.33%)</title><rect x="48.9431%" y="405" width="0.3252%" height="15" fill="rgb(250,87,22)" fg:x="301" fg:w="2"/><text x="49.1931%" y="415.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (5 samples, 0.81%)</title><rect x="48.6179%" y="613" width="0.8130%" height="15" fill="rgb(239,43,17)" fg:x="299" fg:w="5"/><text x="48.8679%" y="623.50"></text></g><g><title>hex::encode (1 samples, 0.16%)</title><rect x="49.2683%" y="597" width="0.1626%" height="15" fill="rgb(231,177,25)" fg:x="303" fg:w="1"/><text x="49.5183%" y="607.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.16%)</title><rect x="49.2683%" y="581" width="0.1626%" height="15" fill="rgb(219,179,1)" fg:x="303" fg:w="1"/><text x="49.5183%" y="591.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.16%)</title><rect x="49.2683%" y="565" width="0.1626%" height="15" fill="rgb(238,219,53)" fg:x="303" fg:w="1"/><text x="49.5183%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.16%)</title><rect x="49.2683%" y="549" width="0.1626%" height="15" fill="rgb(232,167,36)" fg:x="303" fg:w="1"/><text x="49.5183%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.16%)</title><rect x="49.2683%" y="533" width="0.1626%" height="15" fill="rgb(244,19,51)" fg:x="303" fg:w="1"/><text x="49.5183%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.16%)</title><rect x="49.2683%" y="517" width="0.1626%" height="15" fill="rgb(224,6,22)" fg:x="303" fg:w="1"/><text x="49.5183%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.16%)</title><rect x="49.2683%" y="501" width="0.1626%" height="15" fill="rgb(224,145,5)" fg:x="303" fg:w="1"/><text x="49.5183%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.16%)</title><rect x="49.2683%" y="485" width="0.1626%" height="15" fill="rgb(234,130,49)" fg:x="303" fg:w="1"/><text x="49.5183%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.16%)</title><rect x="49.2683%" y="469" width="0.1626%" height="15" fill="rgb(254,6,2)" fg:x="303" fg:w="1"/><text x="49.5183%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1 samples, 0.16%)</title><rect x="49.2683%" y="453" width="0.1626%" height="15" fill="rgb(208,96,46)" fg:x="303" fg:w="1"/><text x="49.5183%" y="463.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.16%)</title><rect x="49.2683%" y="437" width="0.1626%" height="15" fill="rgb(239,3,39)" fg:x="303" fg:w="1"/><text x="49.5183%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="49.2683%" y="421" width="0.1626%" height="15" fill="rgb(233,210,1)" fg:x="303" fg:w="1"/><text x="49.5183%" y="431.50"></text></g><g><title>std::fs::File::metadata (5 samples, 0.81%)</title><rect x="49.4309%" y="549" width="0.8130%" height="15" fill="rgb(244,137,37)" fg:x="304" fg:w="5"/><text x="49.6809%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (5 samples, 0.81%)</title><rect x="49.4309%" y="533" width="0.8130%" height="15" fill="rgb(240,136,2)" fg:x="304" fg:w="5"/><text x="49.6809%" y="543.50"></text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 0.81%)</title><rect x="49.4309%" y="517" width="0.8130%" height="15" fill="rgb(239,18,37)" fg:x="304" fg:w="5"/><text x="49.6809%" y="527.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 0.81%)</title><rect x="49.4309%" y="501" width="0.8130%" height="15" fill="rgb(218,185,22)" fg:x="304" fg:w="5"/><text x="49.6809%" y="511.50"></text></g><g><title>statx (5 samples, 0.81%)</title><rect x="49.4309%" y="485" width="0.8130%" height="15" fill="rgb(225,218,4)" fg:x="304" fg:w="5"/><text x="49.6809%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="49.4309%" y="469" width="0.8130%" height="15" fill="rgb(230,182,32)" fg:x="304" fg:w="5"/><text x="49.6809%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="49.4309%" y="453" width="0.8130%" height="15" fill="rgb(242,56,43)" fg:x="304" fg:w="5"/><text x="49.6809%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="49.4309%" y="437" width="0.8130%" height="15" fill="rgb(233,99,24)" fg:x="304" fg:w="5"/><text x="49.6809%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="49.5935%" y="421" width="0.6504%" height="15" fill="rgb(234,209,42)" fg:x="305" fg:w="4"/><text x="49.8435%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="49.5935%" y="405" width="0.6504%" height="15" fill="rgb(227,7,12)" fg:x="305" fg:w="4"/><text x="49.8435%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="49.5935%" y="389" width="0.6504%" height="15" fill="rgb(245,203,43)" fg:x="305" fg:w="4"/><text x="49.8435%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="49.5935%" y="373" width="0.6504%" height="15" fill="rgb(238,205,33)" fg:x="305" fg:w="4"/><text x="49.8435%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="49.7561%" y="357" width="0.4878%" height="15" fill="rgb(231,56,7)" fg:x="306" fg:w="3"/><text x="50.0061%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="50.0813%" y="341" width="0.1626%" height="15" fill="rgb(244,186,29)" fg:x="308" fg:w="1"/><text x="50.3313%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="50.0813%" y="325" width="0.1626%" height="15" fill="rgb(234,111,31)" fg:x="308" fg:w="1"/><text x="50.3313%" y="335.50"></text></g><g><title>std::fs::buffer_capacity_required (9 samples, 1.46%)</title><rect x="49.4309%" y="565" width="1.4634%" height="15" fill="rgb(241,149,10)" fg:x="304" fg:w="9"/><text x="49.6809%" y="575.50"></text></g><g><title>std::io::Seek::stream_position (4 samples, 0.65%)</title><rect x="50.2439%" y="549" width="0.6504%" height="15" fill="rgb(249,206,44)" fg:x="309" fg:w="4"/><text x="50.4939%" y="559.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (4 samples, 0.65%)</title><rect x="50.2439%" y="533" width="0.6504%" height="15" fill="rgb(251,153,30)" fg:x="309" fg:w="4"/><text x="50.4939%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::seek (4 samples, 0.65%)</title><rect x="50.2439%" y="517" width="0.6504%" height="15" fill="rgb(239,152,38)" fg:x="309" fg:w="4"/><text x="50.4939%" y="527.50"></text></g><g><title>__lseek64 (4 samples, 0.65%)</title><rect x="50.2439%" y="501" width="0.6504%" height="15" fill="rgb(249,139,47)" fg:x="309" fg:w="4"/><text x="50.4939%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="50.2439%" y="485" width="0.6504%" height="15" fill="rgb(244,64,35)" fg:x="309" fg:w="4"/><text x="50.4939%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="50.2439%" y="469" width="0.6504%" height="15" fill="rgb(216,46,15)" fg:x="309" fg:w="4"/><text x="50.4939%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="50.2439%" y="453" width="0.6504%" height="15" fill="rgb(250,74,19)" fg:x="309" fg:w="4"/><text x="50.4939%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="50.5691%" y="437" width="0.3252%" height="15" fill="rgb(249,42,33)" fg:x="311" fg:w="2"/><text x="50.8191%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="50.5691%" y="421" width="0.3252%" height="15" fill="rgb(242,149,17)" fg:x="311" fg:w="2"/><text x="50.8191%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.33%)</title><rect x="50.8943%" y="533" width="0.3252%" height="15" fill="rgb(244,29,21)" fg:x="313" fg:w="2"/><text x="51.1443%" y="543.50"></text></g><g><title>core::str::validations::run_utf8_validation (2 samples, 0.33%)</title><rect x="50.8943%" y="517" width="0.3252%" height="15" fill="rgb(220,130,37)" fg:x="313" fg:w="2"/><text x="51.1443%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (15 samples, 2.44%)</title><rect x="49.4309%" y="581" width="2.4390%" height="15" fill="rgb(211,67,2)" fg:x="304" fg:w="15"/><text x="49.6809%" y="591.50">&lt;s..</text></g><g><title>std::io::default_read_to_string (6 samples, 0.98%)</title><rect x="50.8943%" y="565" width="0.9756%" height="15" fill="rgb(235,68,52)" fg:x="313" fg:w="6"/><text x="51.1443%" y="575.50"></text></g><g><title>std::io::append_to_string (6 samples, 0.98%)</title><rect x="50.8943%" y="549" width="0.9756%" height="15" fill="rgb(246,142,3)" fg:x="313" fg:w="6"/><text x="51.1443%" y="559.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (4 samples, 0.65%)</title><rect x="51.2195%" y="533" width="0.6504%" height="15" fill="rgb(241,25,7)" fg:x="315" fg:w="4"/><text x="51.4695%" y="543.50"></text></g><g><title>std::io::default_read_to_end (4 samples, 0.65%)</title><rect x="51.2195%" y="517" width="0.6504%" height="15" fill="rgb(242,119,39)" fg:x="315" fg:w="4"/><text x="51.4695%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (4 samples, 0.65%)</title><rect x="51.2195%" y="501" width="0.6504%" height="15" fill="rgb(241,98,45)" fg:x="315" fg:w="4"/><text x="51.4695%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (4 samples, 0.65%)</title><rect x="51.2195%" y="485" width="0.6504%" height="15" fill="rgb(254,28,30)" fg:x="315" fg:w="4"/><text x="51.4695%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (4 samples, 0.65%)</title><rect x="51.2195%" y="469" width="0.6504%" height="15" fill="rgb(241,142,54)" fg:x="315" fg:w="4"/><text x="51.4695%" y="479.50"></text></g><g><title>__libc_read (4 samples, 0.65%)</title><rect x="51.2195%" y="453" width="0.6504%" height="15" fill="rgb(222,85,15)" fg:x="315" fg:w="4"/><text x="51.4695%" y="463.50"></text></g><g><title>__libc_read (4 samples, 0.65%)</title><rect x="51.2195%" y="437" width="0.6504%" height="15" fill="rgb(210,85,47)" fg:x="315" fg:w="4"/><text x="51.4695%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="51.2195%" y="421" width="0.6504%" height="15" fill="rgb(224,206,25)" fg:x="315" fg:w="4"/><text x="51.4695%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.3821%" y="405" width="0.4878%" height="15" fill="rgb(243,201,19)" fg:x="316" fg:w="3"/><text x="51.6321%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.3821%" y="389" width="0.4878%" height="15" fill="rgb(236,59,4)" fg:x="316" fg:w="3"/><text x="51.6321%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="373" width="0.3252%" height="15" fill="rgb(254,179,45)" fg:x="317" fg:w="2"/><text x="51.7947%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="357" width="0.3252%" height="15" fill="rgb(226,14,10)" fg:x="317" fg:w="2"/><text x="51.7947%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="341" width="0.3252%" height="15" fill="rgb(244,27,41)" fg:x="317" fg:w="2"/><text x="51.7947%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="325" width="0.3252%" height="15" fill="rgb(235,35,32)" fg:x="317" fg:w="2"/><text x="51.7947%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="309" width="0.3252%" height="15" fill="rgb(218,68,31)" fg:x="317" fg:w="2"/><text x="51.7947%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="293" width="0.3252%" height="15" fill="rgb(207,120,37)" fg:x="317" fg:w="2"/><text x="51.7947%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="51.5447%" y="277" width="0.3252%" height="15" fill="rgb(227,98,0)" fg:x="317" fg:w="2"/><text x="51.7947%" y="287.50"></text></g><g><title>__close (3 samples, 0.49%)</title><rect x="51.8699%" y="581" width="0.4878%" height="15" fill="rgb(207,7,3)" fg:x="319" fg:w="3"/><text x="52.1199%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.8699%" y="565" width="0.4878%" height="15" fill="rgb(206,98,19)" fg:x="319" fg:w="3"/><text x="52.1199%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.8699%" y="549" width="0.4878%" height="15" fill="rgb(217,5,26)" fg:x="319" fg:w="3"/><text x="52.1199%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.8699%" y="533" width="0.4878%" height="15" fill="rgb(235,190,38)" fg:x="319" fg:w="3"/><text x="52.1199%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="51.8699%" y="517" width="0.4878%" height="15" fill="rgb(247,86,24)" fg:x="319" fg:w="3"/><text x="52.1199%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="52.0325%" y="501" width="0.3252%" height="15" fill="rgb(205,101,16)" fg:x="320" fg:w="2"/><text x="52.2825%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="52.0325%" y="485" width="0.3252%" height="15" fill="rgb(246,168,33)" fg:x="320" fg:w="2"/><text x="52.2825%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.33%)</title><rect x="52.0325%" y="469" width="0.3252%" height="15" fill="rgb(231,114,1)" fg:x="320" fg:w="2"/><text x="52.2825%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="52.1951%" y="453" width="0.1626%" height="15" fill="rgb(207,184,53)" fg:x="321" fg:w="1"/><text x="52.4451%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="52.1951%" y="437" width="0.1626%" height="15" fill="rgb(224,95,51)" fg:x="321" fg:w="1"/><text x="52.4451%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="52.1951%" y="421" width="0.1626%" height="15" fill="rgb(212,188,45)" fg:x="321" fg:w="1"/><text x="52.4451%" y="431.50"></text></g><g><title>__close (1 samples, 0.16%)</title><rect x="52.3577%" y="533" width="0.1626%" height="15" fill="rgb(223,154,38)" fg:x="322" fg:w="1"/><text x="52.6077%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="52.3577%" y="517" width="0.1626%" height="15" fill="rgb(251,22,52)" fg:x="322" fg:w="1"/><text x="52.6077%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (54 samples, 8.78%)</title><rect x="52.5203%" y="517" width="8.7805%" height="15" fill="rgb(229,209,22)" fg:x="323" fg:w="54"/><text x="52.7703%" y="527.50">std::sys::un..</text></g><g><title>std::sys::unix::cvt_r (54 samples, 8.78%)</title><rect x="52.5203%" y="501" width="8.7805%" height="15" fill="rgb(234,138,34)" fg:x="323" fg:w="54"/><text x="52.7703%" y="511.50">std::sys::un..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (54 samples, 8.78%)</title><rect x="52.5203%" y="485" width="8.7805%" height="15" fill="rgb(212,95,11)" fg:x="323" fg:w="54"/><text x="52.7703%" y="495.50">std::sys::un..</text></g><g><title>__libc_open64 (54 samples, 8.78%)</title><rect x="52.5203%" y="469" width="8.7805%" height="15" fill="rgb(240,179,47)" fg:x="323" fg:w="54"/><text x="52.7703%" y="479.50">__libc_open64</text></g><g><title>[unknown] (54 samples, 8.78%)</title><rect x="52.5203%" y="453" width="8.7805%" height="15" fill="rgb(240,163,11)" fg:x="323" fg:w="54"/><text x="52.7703%" y="463.50">[unknown]</text></g><g><title>[unknown] (54 samples, 8.78%)</title><rect x="52.5203%" y="437" width="8.7805%" height="15" fill="rgb(236,37,12)" fg:x="323" fg:w="54"/><text x="52.7703%" y="447.50">[unknown]</text></g><g><title>[unknown] (54 samples, 8.78%)</title><rect x="52.5203%" y="421" width="8.7805%" height="15" fill="rgb(232,164,16)" fg:x="323" fg:w="54"/><text x="52.7703%" y="431.50">[unknown]</text></g><g><title>[unknown] (53 samples, 8.62%)</title><rect x="52.6829%" y="405" width="8.6179%" height="15" fill="rgb(244,205,15)" fg:x="324" fg:w="53"/><text x="52.9329%" y="415.50">[unknown]</text></g><g><title>[unknown] (53 samples, 8.62%)</title><rect x="52.6829%" y="389" width="8.6179%" height="15" fill="rgb(223,117,47)" fg:x="324" fg:w="53"/><text x="52.9329%" y="399.50">[unknown]</text></g><g><title>[unknown] (53 samples, 8.62%)</title><rect x="52.6829%" y="373" width="8.6179%" height="15" fill="rgb(244,107,35)" fg:x="324" fg:w="53"/><text x="52.9329%" y="383.50">[unknown]</text></g><g><title>[unknown] (53 samples, 8.62%)</title><rect x="52.6829%" y="357" width="8.6179%" height="15" fill="rgb(205,140,8)" fg:x="324" fg:w="53"/><text x="52.9329%" y="367.50">[unknown]</text></g><g><title>[unknown] (53 samples, 8.62%)</title><rect x="52.6829%" y="341" width="8.6179%" height="15" fill="rgb(228,84,46)" fg:x="324" fg:w="53"/><text x="52.9329%" y="351.50">[unknown]</text></g><g><title>[unknown] (50 samples, 8.13%)</title><rect x="53.1707%" y="325" width="8.1301%" height="15" fill="rgb(254,188,9)" fg:x="327" fg:w="50"/><text x="53.4207%" y="335.50">[unknown]</text></g><g><title>[unknown] (50 samples, 8.13%)</title><rect x="53.1707%" y="309" width="8.1301%" height="15" fill="rgb(206,112,54)" fg:x="327" fg:w="50"/><text x="53.4207%" y="319.50">[unknown]</text></g><g><title>[unknown] (47 samples, 7.64%)</title><rect x="53.6585%" y="293" width="7.6423%" height="15" fill="rgb(216,84,49)" fg:x="330" fg:w="47"/><text x="53.9085%" y="303.50">[unknown]</text></g><g><title>[unknown] (46 samples, 7.48%)</title><rect x="53.8211%" y="277" width="7.4797%" height="15" fill="rgb(214,194,35)" fg:x="331" fg:w="46"/><text x="54.0711%" y="287.50">[unknown]</text></g><g><title>[unknown] (41 samples, 6.67%)</title><rect x="54.6341%" y="261" width="6.6667%" height="15" fill="rgb(249,28,3)" fg:x="336" fg:w="41"/><text x="54.8841%" y="271.50">[unknown]</text></g><g><title>[unknown] (40 samples, 6.50%)</title><rect x="54.7967%" y="245" width="6.5041%" height="15" fill="rgb(222,56,52)" fg:x="337" fg:w="40"/><text x="55.0467%" y="255.50">[unknown]</text></g><g><title>[unknown] (38 samples, 6.18%)</title><rect x="55.1220%" y="229" width="6.1789%" height="15" fill="rgb(245,217,50)" fg:x="339" fg:w="38"/><text x="55.3720%" y="239.50">[unknown]</text></g><g><title>[unknown] (34 samples, 5.53%)</title><rect x="55.7724%" y="213" width="5.5285%" height="15" fill="rgb(213,201,24)" fg:x="343" fg:w="34"/><text x="56.0224%" y="223.50">[unknow..</text></g><g><title>[unknown] (34 samples, 5.53%)</title><rect x="55.7724%" y="197" width="5.5285%" height="15" fill="rgb(248,116,28)" fg:x="343" fg:w="34"/><text x="56.0224%" y="207.50">[unknow..</text></g><g><title>[unknown] (32 samples, 5.20%)</title><rect x="56.0976%" y="181" width="5.2033%" height="15" fill="rgb(219,72,43)" fg:x="345" fg:w="32"/><text x="56.3476%" y="191.50">[unkno..</text></g><g><title>[unknown] (30 samples, 4.88%)</title><rect x="56.4228%" y="165" width="4.8780%" height="15" fill="rgb(209,138,14)" fg:x="347" fg:w="30"/><text x="56.6728%" y="175.50">[unkno..</text></g><g><title>[unknown] (29 samples, 4.72%)</title><rect x="56.5854%" y="149" width="4.7154%" height="15" fill="rgb(222,18,33)" fg:x="348" fg:w="29"/><text x="56.8354%" y="159.50">[unkn..</text></g><g><title>[unknown] (28 samples, 4.55%)</title><rect x="56.7480%" y="133" width="4.5528%" height="15" fill="rgb(213,199,7)" fg:x="349" fg:w="28"/><text x="56.9980%" y="143.50">[unkn..</text></g><g><title>[unknown] (28 samples, 4.55%)</title><rect x="56.7480%" y="117" width="4.5528%" height="15" fill="rgb(250,110,10)" fg:x="349" fg:w="28"/><text x="56.9980%" y="127.50">[unkn..</text></g><g><title>[unknown] (26 samples, 4.23%)</title><rect x="57.0732%" y="101" width="4.2276%" height="15" fill="rgb(248,123,6)" fg:x="351" fg:w="26"/><text x="57.3232%" y="111.50">[unkn..</text></g><g><title>[unknown] (25 samples, 4.07%)</title><rect x="57.2358%" y="85" width="4.0650%" height="15" fill="rgb(206,91,31)" fg:x="352" fg:w="25"/><text x="57.4858%" y="95.50">[unk..</text></g><g><title>[unknown] (23 samples, 3.74%)</title><rect x="57.5610%" y="69" width="3.7398%" height="15" fill="rgb(211,154,13)" fg:x="354" fg:w="23"/><text x="57.8110%" y="79.50">[unk..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="58.0488%" y="53" width="3.2520%" height="15" fill="rgb(225,148,7)" fg:x="357" fg:w="20"/><text x="58.2988%" y="63.50">[un..</text></g><g><title>std::fs::read_to_string (74 samples, 12.03%)</title><rect x="49.4309%" y="613" width="12.0325%" height="15" fill="rgb(220,160,43)" fg:x="304" fg:w="74"/><text x="49.6809%" y="623.50">std::fs::read_to_s..</text></g><g><title>std::fs::read_to_string::inner (74 samples, 12.03%)</title><rect x="49.4309%" y="597" width="12.0325%" height="15" fill="rgb(213,52,39)" fg:x="304" fg:w="74"/><text x="49.6809%" y="607.50">std::fs::read_to_s..</text></g><g><title>std::fs::File::open (56 samples, 9.11%)</title><rect x="52.3577%" y="581" width="9.1057%" height="15" fill="rgb(243,137,7)" fg:x="322" fg:w="56"/><text x="52.6077%" y="591.50">std::fs::File..</text></g><g><title>std::fs::OpenOptions::open (56 samples, 9.11%)</title><rect x="52.3577%" y="565" width="9.1057%" height="15" fill="rgb(230,79,13)" fg:x="322" fg:w="56"/><text x="52.6077%" y="575.50">std::fs::Open..</text></g><g><title>std::fs::OpenOptions::_open (56 samples, 9.11%)</title><rect x="52.3577%" y="549" width="9.1057%" height="15" fill="rgb(247,105,23)" fg:x="322" fg:w="56"/><text x="52.6077%" y="559.50">std::fs::Open..</text></g><g><title>std::sys::unix::fs::File::open (55 samples, 8.94%)</title><rect x="52.5203%" y="533" width="8.9431%" height="15" fill="rgb(223,179,41)" fg:x="323" fg:w="55"/><text x="52.7703%" y="543.50">std::sys::uni..</text></g><g><title>std::sys::unix::fs::cstr (1 samples, 0.16%)</title><rect x="61.3008%" y="517" width="0.1626%" height="15" fill="rgb(218,9,34)" fg:x="377" fg:w="1"/><text x="61.5508%" y="527.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.16%)</title><rect x="61.3008%" y="501" width="0.1626%" height="15" fill="rgb(222,106,8)" fg:x="377" fg:w="1"/><text x="61.5508%" y="511.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.16%)</title><rect x="61.3008%" y="485" width="0.1626%" height="15" fill="rgb(211,220,0)" fg:x="377" fg:w="1"/><text x="61.5508%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.16%)</title><rect x="61.3008%" y="469" width="0.1626%" height="15" fill="rgb(229,52,16)" fg:x="377" fg:w="1"/><text x="61.5508%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="61.3008%" y="453" width="0.1626%" height="15" fill="rgb(212,155,18)" fg:x="377" fg:w="1"/><text x="61.5508%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.16%)</title><rect x="61.3008%" y="437" width="0.1626%" height="15" fill="rgb(242,21,14)" fg:x="377" fg:w="1"/><text x="61.5508%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.16%)</title><rect x="61.3008%" y="421" width="0.1626%" height="15" fill="rgb(222,19,48)" fg:x="377" fg:w="1"/><text x="61.5508%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="61.3008%" y="405" width="0.1626%" height="15" fill="rgb(232,45,27)" fg:x="377" fg:w="1"/><text x="61.5508%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="61.3008%" y="389" width="0.1626%" height="15" fill="rgb(249,103,42)" fg:x="377" fg:w="1"/><text x="61.5508%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="61.3008%" y="373" width="0.1626%" height="15" fill="rgb(246,81,33)" fg:x="377" fg:w="1"/><text x="61.5508%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="61.3008%" y="357" width="0.1626%" height="15" fill="rgb(252,33,42)" fg:x="377" fg:w="1"/><text x="61.5508%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="61.3008%" y="341" width="0.1626%" height="15" fill="rgb(209,212,41)" fg:x="377" fg:w="1"/><text x="61.5508%" y="351.50"></text></g><g><title>lab4::package::PackageDownloader::run (313 samples, 50.89%)</title><rect x="13.8211%" y="629" width="50.8943%" height="15" fill="rgb(207,154,6)" fg:x="85" fg:w="313"/><text x="14.0711%" y="639.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 3.25%)</title><rect x="61.4634%" y="613" width="3.2520%" height="15" fill="rgb(223,64,47)" fg:x="378" fg:w="20"/><text x="61.7134%" y="623.50">std..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 3.25%)</title><rect x="61.4634%" y="597" width="3.2520%" height="15" fill="rgb(211,161,38)" fg:x="378" fg:w="20"/><text x="61.7134%" y="607.50">std..</text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 3.25%)</title><rect x="61.4634%" y="581" width="3.2520%" height="15" fill="rgb(219,138,40)" fg:x="378" fg:w="20"/><text x="61.7134%" y="591.50">std..</text></g><g><title>__GI___pthread_mutex_lock (20 samples, 3.25%)</title><rect x="61.4634%" y="565" width="3.2520%" height="15" fill="rgb(241,228,46)" fg:x="378" fg:w="20"/><text x="61.7134%" y="575.50">__G..</text></g><g><title>__lll_lock_wait (20 samples, 3.25%)</title><rect x="61.4634%" y="549" width="3.2520%" height="15" fill="rgb(223,209,38)" fg:x="378" fg:w="20"/><text x="61.7134%" y="559.50">__l..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="533" width="3.2520%" height="15" fill="rgb(236,164,45)" fg:x="378" fg:w="20"/><text x="61.7134%" y="543.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="517" width="3.2520%" height="15" fill="rgb(231,15,5)" fg:x="378" fg:w="20"/><text x="61.7134%" y="527.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="501" width="3.2520%" height="15" fill="rgb(252,35,15)" fg:x="378" fg:w="20"/><text x="61.7134%" y="511.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="485" width="3.2520%" height="15" fill="rgb(248,181,18)" fg:x="378" fg:w="20"/><text x="61.7134%" y="495.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="469" width="3.2520%" height="15" fill="rgb(233,39,42)" fg:x="378" fg:w="20"/><text x="61.7134%" y="479.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="453" width="3.2520%" height="15" fill="rgb(238,110,33)" fg:x="378" fg:w="20"/><text x="61.7134%" y="463.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="437" width="3.2520%" height="15" fill="rgb(233,195,10)" fg:x="378" fg:w="20"/><text x="61.7134%" y="447.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="421" width="3.2520%" height="15" fill="rgb(254,105,3)" fg:x="378" fg:w="20"/><text x="61.7134%" y="431.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="405" width="3.2520%" height="15" fill="rgb(221,225,9)" fg:x="378" fg:w="20"/><text x="61.7134%" y="415.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="389" width="3.2520%" height="15" fill="rgb(224,227,45)" fg:x="378" fg:w="20"/><text x="61.7134%" y="399.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="373" width="3.2520%" height="15" fill="rgb(229,198,43)" fg:x="378" fg:w="20"/><text x="61.7134%" y="383.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="357" width="3.2520%" height="15" fill="rgb(206,209,35)" fg:x="378" fg:w="20"/><text x="61.7134%" y="367.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="341" width="3.2520%" height="15" fill="rgb(245,195,53)" fg:x="378" fg:w="20"/><text x="61.7134%" y="351.50">[un..</text></g><g><title>[unknown] (20 samples, 3.25%)</title><rect x="61.4634%" y="325" width="3.2520%" height="15" fill="rgb(240,92,26)" fg:x="378" fg:w="20"/><text x="61.7134%" y="335.50">[un..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (6 samples, 0.98%)</title><rect x="65.0407%" y="613" width="0.9756%" height="15" fill="rgb(207,40,23)" fg:x="400" fg:w="6"/><text x="65.2907%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 1.79%)</title><rect x="66.0163%" y="597" width="1.7886%" height="15" fill="rgb(223,111,35)" fg:x="406" fg:w="11"/><text x="66.2663%" y="607.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.16%)</title><rect x="67.9675%" y="581" width="0.1626%" height="15" fill="rgb(229,147,28)" fg:x="418" fg:w="1"/><text x="68.2175%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.33%)</title><rect x="68.4553%" y="565" width="0.3252%" height="15" fill="rgb(211,29,28)" fg:x="421" fg:w="2"/><text x="68.7053%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="68.9431%" y="549" width="0.9756%" height="15" fill="rgb(228,72,33)" fg:x="424" fg:w="6"/><text x="69.1931%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="533" width="0.8130%" height="15" fill="rgb(205,214,31)" fg:x="425" fg:w="5"/><text x="69.3557%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="517" width="0.8130%" height="15" fill="rgb(224,111,15)" fg:x="425" fg:w="5"/><text x="69.3557%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="501" width="0.8130%" height="15" fill="rgb(253,21,26)" fg:x="425" fg:w="5"/><text x="69.3557%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="485" width="0.8130%" height="15" fill="rgb(245,139,43)" fg:x="425" fg:w="5"/><text x="69.3557%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="469" width="0.8130%" height="15" fill="rgb(252,170,7)" fg:x="425" fg:w="5"/><text x="69.3557%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="453" width="0.8130%" height="15" fill="rgb(231,118,14)" fg:x="425" fg:w="5"/><text x="69.3557%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="437" width="0.8130%" height="15" fill="rgb(238,83,0)" fg:x="425" fg:w="5"/><text x="69.3557%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="421" width="0.8130%" height="15" fill="rgb(221,39,39)" fg:x="425" fg:w="5"/><text x="69.3557%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="405" width="0.8130%" height="15" fill="rgb(222,119,46)" fg:x="425" fg:w="5"/><text x="69.3557%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="389" width="0.8130%" height="15" fill="rgb(222,165,49)" fg:x="425" fg:w="5"/><text x="69.3557%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="373" width="0.8130%" height="15" fill="rgb(219,113,52)" fg:x="425" fg:w="5"/><text x="69.3557%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.1057%" y="357" width="0.8130%" height="15" fill="rgb(214,7,15)" fg:x="425" fg:w="5"/><text x="69.3557%" y="367.50"></text></g><g><title>_int_free (12 samples, 1.95%)</title><rect x="68.7805%" y="565" width="1.9512%" height="15" fill="rgb(235,32,4)" fg:x="423" fg:w="12"/><text x="69.0305%" y="575.50">_..</text></g><g><title>__lll_lock_wait_private (5 samples, 0.81%)</title><rect x="69.9187%" y="549" width="0.8130%" height="15" fill="rgb(238,90,54)" fg:x="430" fg:w="5"/><text x="70.1687%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="533" width="0.8130%" height="15" fill="rgb(213,208,19)" fg:x="430" fg:w="5"/><text x="70.1687%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="517" width="0.8130%" height="15" fill="rgb(233,156,4)" fg:x="430" fg:w="5"/><text x="70.1687%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="501" width="0.8130%" height="15" fill="rgb(207,194,5)" fg:x="430" fg:w="5"/><text x="70.1687%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="485" width="0.8130%" height="15" fill="rgb(206,111,30)" fg:x="430" fg:w="5"/><text x="70.1687%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="469" width="0.8130%" height="15" fill="rgb(243,70,54)" fg:x="430" fg:w="5"/><text x="70.1687%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="453" width="0.8130%" height="15" fill="rgb(242,28,8)" fg:x="430" fg:w="5"/><text x="70.1687%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="437" width="0.8130%" height="15" fill="rgb(219,106,18)" fg:x="430" fg:w="5"/><text x="70.1687%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="421" width="0.8130%" height="15" fill="rgb(244,222,10)" fg:x="430" fg:w="5"/><text x="70.1687%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="405" width="0.8130%" height="15" fill="rgb(236,179,52)" fg:x="430" fg:w="5"/><text x="70.1687%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="389" width="0.8130%" height="15" fill="rgb(213,23,39)" fg:x="430" fg:w="5"/><text x="70.1687%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="373" width="0.8130%" height="15" fill="rgb(238,48,10)" fg:x="430" fg:w="5"/><text x="70.1687%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="357" width="0.8130%" height="15" fill="rgb(251,196,23)" fg:x="430" fg:w="5"/><text x="70.1687%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="341" width="0.8130%" height="15" fill="rgb(250,152,24)" fg:x="430" fg:w="5"/><text x="70.1687%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="69.9187%" y="325" width="0.8130%" height="15" fill="rgb(209,150,17)" fg:x="430" fg:w="5"/><text x="70.1687%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.33%)</title><rect x="70.7317%" y="565" width="0.3252%" height="15" fill="rgb(234,202,34)" fg:x="435" fg:w="2"/><text x="70.9817%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 1.46%)</title><rect x="71.0569%" y="565" width="1.4634%" height="15" fill="rgb(253,148,53)" fg:x="437" fg:w="9"/><text x="71.3069%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 1.46%)</title><rect x="71.0569%" y="549" width="1.4634%" height="15" fill="rgb(218,129,16)" fg:x="437" fg:w="9"/><text x="71.3069%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.16%)</title><rect x="72.5203%" y="549" width="0.1626%" height="15" fill="rgb(216,85,19)" fg:x="446" fg:w="1"/><text x="72.7703%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.16%)</title><rect x="72.5203%" y="533" width="0.1626%" height="15" fill="rgb(235,228,7)" fg:x="446" fg:w="1"/><text x="72.7703%" y="543.50"></text></g><g><title>__GI___sched_yield (7 samples, 1.14%)</title><rect x="72.6829%" y="533" width="1.1382%" height="15" fill="rgb(245,175,0)" fg:x="447" fg:w="7"/><text x="72.9329%" y="543.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="72.6829%" y="517" width="1.1382%" height="15" fill="rgb(208,168,36)" fg:x="447" fg:w="7"/><text x="72.9329%" y="527.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="72.6829%" y="501" width="1.1382%" height="15" fill="rgb(246,171,24)" fg:x="447" fg:w="7"/><text x="72.9329%" y="511.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="72.6829%" y="485" width="1.1382%" height="15" fill="rgb(215,142,24)" fg:x="447" fg:w="7"/><text x="72.9329%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="469" width="0.8130%" height="15" fill="rgb(250,187,7)" fg:x="449" fg:w="5"/><text x="73.2581%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="453" width="0.8130%" height="15" fill="rgb(228,66,33)" fg:x="449" fg:w="5"/><text x="73.2581%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="437" width="0.8130%" height="15" fill="rgb(234,215,21)" fg:x="449" fg:w="5"/><text x="73.2581%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="421" width="0.8130%" height="15" fill="rgb(222,191,20)" fg:x="449" fg:w="5"/><text x="73.2581%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="405" width="0.8130%" height="15" fill="rgb(245,79,54)" fg:x="449" fg:w="5"/><text x="73.2581%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="389" width="0.8130%" height="15" fill="rgb(240,10,37)" fg:x="449" fg:w="5"/><text x="73.2581%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="373" width="0.8130%" height="15" fill="rgb(214,192,32)" fg:x="449" fg:w="5"/><text x="73.2581%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="357" width="0.8130%" height="15" fill="rgb(209,36,54)" fg:x="449" fg:w="5"/><text x="73.2581%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="73.0081%" y="341" width="0.8130%" height="15" fill="rgb(220,10,11)" fg:x="449" fg:w="5"/><text x="73.2581%" y="351.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (36 samples, 5.85%)</title><rect x="68.1301%" y="581" width="5.8537%" height="15" fill="rgb(221,106,17)" fg:x="419" fg:w="36"/><text x="68.3801%" y="591.50">crossbe..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (9 samples, 1.46%)</title><rect x="72.5203%" y="565" width="1.4634%" height="15" fill="rgb(251,142,44)" fg:x="446" fg:w="9"/><text x="72.7703%" y="575.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (8 samples, 1.30%)</title><rect x="72.6829%" y="549" width="1.3008%" height="15" fill="rgb(238,13,15)" fg:x="447" fg:w="8"/><text x="72.9329%" y="559.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.16%)</title><rect x="73.8211%" y="533" width="0.1626%" height="15" fill="rgb(208,107,27)" fg:x="454" fg:w="1"/><text x="74.0711%" y="543.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.16%)</title><rect x="73.8211%" y="517" width="0.1626%" height="15" fill="rgb(205,136,37)" fg:x="454" fg:w="1"/><text x="74.0711%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.16%)</title><rect x="73.8211%" y="501" width="0.1626%" height="15" fill="rgb(250,205,27)" fg:x="454" fg:w="1"/><text x="74.0711%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="565" width="0.8130%" height="15" fill="rgb(210,80,43)" fg:x="459" fg:w="5"/><text x="74.8841%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="549" width="0.8130%" height="15" fill="rgb(247,160,36)" fg:x="459" fg:w="5"/><text x="74.8841%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="533" width="0.8130%" height="15" fill="rgb(234,13,49)" fg:x="459" fg:w="5"/><text x="74.8841%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="517" width="0.8130%" height="15" fill="rgb(234,122,0)" fg:x="459" fg:w="5"/><text x="74.8841%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="501" width="0.8130%" height="15" fill="rgb(207,146,38)" fg:x="459" fg:w="5"/><text x="74.8841%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="485" width="0.8130%" height="15" fill="rgb(207,177,25)" fg:x="459" fg:w="5"/><text x="74.8841%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="469" width="0.8130%" height="15" fill="rgb(211,178,42)" fg:x="459" fg:w="5"/><text x="74.8841%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="453" width="0.8130%" height="15" fill="rgb(230,69,54)" fg:x="459" fg:w="5"/><text x="74.8841%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="437" width="0.8130%" height="15" fill="rgb(214,135,41)" fg:x="459" fg:w="5"/><text x="74.8841%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="421" width="0.8130%" height="15" fill="rgb(237,67,25)" fg:x="459" fg:w="5"/><text x="74.8841%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="405" width="0.8130%" height="15" fill="rgb(222,189,50)" fg:x="459" fg:w="5"/><text x="74.8841%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="389" width="0.8130%" height="15" fill="rgb(245,148,34)" fg:x="459" fg:w="5"/><text x="74.8841%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="74.6341%" y="373" width="0.8130%" height="15" fill="rgb(222,29,6)" fg:x="459" fg:w="5"/><text x="74.8841%" y="383.50"></text></g><g><title>__GI___sched_yield (7 samples, 1.14%)</title><rect x="75.4472%" y="565" width="1.1382%" height="15" fill="rgb(221,189,43)" fg:x="464" fg:w="7"/><text x="75.6972%" y="575.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="549" width="1.1382%" height="15" fill="rgb(207,36,27)" fg:x="464" fg:w="7"/><text x="75.6972%" y="559.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="533" width="1.1382%" height="15" fill="rgb(217,90,24)" fg:x="464" fg:w="7"/><text x="75.6972%" y="543.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="517" width="1.1382%" height="15" fill="rgb(224,66,35)" fg:x="464" fg:w="7"/><text x="75.6972%" y="527.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="501" width="1.1382%" height="15" fill="rgb(221,13,50)" fg:x="464" fg:w="7"/><text x="75.6972%" y="511.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="485" width="1.1382%" height="15" fill="rgb(236,68,49)" fg:x="464" fg:w="7"/><text x="75.6972%" y="495.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="75.4472%" y="469" width="1.1382%" height="15" fill="rgb(229,146,28)" fg:x="464" fg:w="7"/><text x="75.6972%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="75.6098%" y="453" width="0.9756%" height="15" fill="rgb(225,31,38)" fg:x="465" fg:w="6"/><text x="75.8598%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="75.7724%" y="437" width="0.8130%" height="15" fill="rgb(250,208,3)" fg:x="466" fg:w="5"/><text x="76.0224%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="75.7724%" y="421" width="0.8130%" height="15" fill="rgb(246,54,23)" fg:x="466" fg:w="5"/><text x="76.0224%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="75.7724%" y="405" width="0.8130%" height="15" fill="rgb(243,76,11)" fg:x="466" fg:w="5"/><text x="76.0224%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="75.7724%" y="389" width="0.8130%" height="15" fill="rgb(245,21,50)" fg:x="466" fg:w="5"/><text x="76.0224%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="75.7724%" y="373" width="0.8130%" height="15" fill="rgb(228,9,43)" fg:x="466" fg:w="5"/><text x="76.0224%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 3.09%)</title><rect x="76.5854%" y="565" width="3.0894%" height="15" fill="rgb(208,100,47)" fg:x="471" fg:w="19"/><text x="76.8354%" y="575.50">cor..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 3.09%)</title><rect x="76.5854%" y="549" width="3.0894%" height="15" fill="rgb(232,26,8)" fg:x="471" fg:w="19"/><text x="76.8354%" y="559.50">cor..</text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.33%)</title><rect x="79.6748%" y="565" width="0.3252%" height="15" fill="rgb(216,166,38)" fg:x="490" fg:w="2"/><text x="79.9248%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.33%)</title><rect x="79.6748%" y="549" width="0.3252%" height="15" fill="rgb(251,202,51)" fg:x="490" fg:w="2"/><text x="79.9248%" y="559.50"></text></g><g><title>core::sync::atomic::fence (5 samples, 0.81%)</title><rect x="80.0000%" y="565" width="0.8130%" height="15" fill="rgb(254,216,34)" fg:x="492" fg:w="5"/><text x="80.2500%" y="575.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (97 samples, 15.77%)</title><rect x="66.0163%" y="613" width="15.7724%" height="15" fill="rgb(251,32,27)" fg:x="406" fg:w="97"/><text x="66.2663%" y="623.50">crossbeam_channel::chann..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (86 samples, 13.98%)</title><rect x="67.8049%" y="597" width="13.9837%" height="15" fill="rgb(208,127,28)" fg:x="417" fg:w="86"/><text x="68.0549%" y="607.50">crossbeam_channel::fl..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (48 samples, 7.80%)</title><rect x="73.9837%" y="581" width="7.8049%" height="15" fill="rgb(224,137,22)" fg:x="455" fg:w="48"/><text x="74.2337%" y="591.50">crossbeam_c..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (6 samples, 0.98%)</title><rect x="80.8130%" y="565" width="0.9756%" height="15" fill="rgb(254,70,32)" fg:x="497" fg:w="6"/><text x="81.0630%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (6 samples, 0.98%)</title><rect x="80.8130%" y="549" width="0.9756%" height="15" fill="rgb(229,75,37)" fg:x="497" fg:w="6"/><text x="81.0630%" y="559.50"></text></g><g><title>core::hint::spin_loop (6 samples, 0.98%)</title><rect x="80.8130%" y="533" width="0.9756%" height="15" fill="rgb(252,64,23)" fg:x="497" fg:w="6"/><text x="81.0630%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (6 samples, 0.98%)</title><rect x="80.8130%" y="517" width="0.9756%" height="15" fill="rgb(232,162,48)" fg:x="497" fg:w="6"/><text x="81.0630%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="597" width="0.8130%" height="15" fill="rgb(246,160,12)" fg:x="513" fg:w="5"/><text x="83.6646%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="581" width="0.8130%" height="15" fill="rgb(247,166,0)" fg:x="513" fg:w="5"/><text x="83.6646%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="565" width="0.8130%" height="15" fill="rgb(249,219,21)" fg:x="513" fg:w="5"/><text x="83.6646%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="549" width="0.8130%" height="15" fill="rgb(205,209,3)" fg:x="513" fg:w="5"/><text x="83.6646%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="533" width="0.8130%" height="15" fill="rgb(243,44,1)" fg:x="513" fg:w="5"/><text x="83.6646%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="517" width="0.8130%" height="15" fill="rgb(206,159,16)" fg:x="513" fg:w="5"/><text x="83.6646%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="501" width="0.8130%" height="15" fill="rgb(244,77,30)" fg:x="513" fg:w="5"/><text x="83.6646%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="485" width="0.8130%" height="15" fill="rgb(218,69,12)" fg:x="513" fg:w="5"/><text x="83.6646%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="469" width="0.8130%" height="15" fill="rgb(212,87,7)" fg:x="513" fg:w="5"/><text x="83.6646%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="453" width="0.8130%" height="15" fill="rgb(245,114,25)" fg:x="513" fg:w="5"/><text x="83.6646%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="437" width="0.8130%" height="15" fill="rgb(210,61,42)" fg:x="513" fg:w="5"/><text x="83.6646%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="421" width="0.8130%" height="15" fill="rgb(211,52,33)" fg:x="513" fg:w="5"/><text x="83.6646%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="83.4146%" y="405" width="0.8130%" height="15" fill="rgb(234,58,33)" fg:x="513" fg:w="5"/><text x="83.6646%" y="415.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.33%)</title><rect x="84.7154%" y="549" width="0.3252%" height="15" fill="rgb(220,115,36)" fg:x="521" fg:w="2"/><text x="84.9654%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.49%)</title><rect x="84.7154%" y="565" width="0.4878%" height="15" fill="rgb(243,153,54)" fg:x="521" fg:w="3"/><text x="84.9654%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.16%)</title><rect x="85.0407%" y="549" width="0.1626%" height="15" fill="rgb(251,47,18)" fg:x="523" fg:w="1"/><text x="85.2907%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.16%)</title><rect x="85.0407%" y="533" width="0.1626%" height="15" fill="rgb(242,102,42)" fg:x="523" fg:w="1"/><text x="85.2907%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.16%)</title><rect x="85.0407%" y="517" width="0.1626%" height="15" fill="rgb(234,31,38)" fg:x="523" fg:w="1"/><text x="85.2907%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.16%)</title><rect x="85.0407%" y="501" width="0.1626%" height="15" fill="rgb(221,117,51)" fg:x="523" fg:w="1"/><text x="85.2907%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.16%)</title><rect x="85.0407%" y="485" width="0.1626%" height="15" fill="rgb(212,20,18)" fg:x="523" fg:w="1"/><text x="85.2907%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 2.93%)</title><rect x="85.2033%" y="565" width="2.9268%" height="15" fill="rgb(245,133,36)" fg:x="524" fg:w="18"/><text x="85.4533%" y="575.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 2.93%)</title><rect x="85.2033%" y="549" width="2.9268%" height="15" fill="rgb(212,6,19)" fg:x="524" fg:w="18"/><text x="85.4533%" y="559.50">co..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (5 samples, 0.81%)</title><rect x="88.1301%" y="565" width="0.8130%" height="15" fill="rgb(218,1,36)" fg:x="542" fg:w="5"/><text x="88.3801%" y="575.50"></text></g><g><title>__GI___sched_yield (5 samples, 0.81%)</title><rect x="88.1301%" y="549" width="0.8130%" height="15" fill="rgb(246,84,54)" fg:x="542" fg:w="5"/><text x="88.3801%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="533" width="0.8130%" height="15" fill="rgb(242,110,6)" fg:x="542" fg:w="5"/><text x="88.3801%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="517" width="0.8130%" height="15" fill="rgb(214,47,5)" fg:x="542" fg:w="5"/><text x="88.3801%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="501" width="0.8130%" height="15" fill="rgb(218,159,25)" fg:x="542" fg:w="5"/><text x="88.3801%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="485" width="0.8130%" height="15" fill="rgb(215,211,28)" fg:x="542" fg:w="5"/><text x="88.3801%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="469" width="0.8130%" height="15" fill="rgb(238,59,32)" fg:x="542" fg:w="5"/><text x="88.3801%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="453" width="0.8130%" height="15" fill="rgb(226,82,3)" fg:x="542" fg:w="5"/><text x="88.3801%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="437" width="0.8130%" height="15" fill="rgb(240,164,32)" fg:x="542" fg:w="5"/><text x="88.3801%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="421" width="0.8130%" height="15" fill="rgb(232,46,7)" fg:x="542" fg:w="5"/><text x="88.3801%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="405" width="0.8130%" height="15" fill="rgb(229,129,53)" fg:x="542" fg:w="5"/><text x="88.3801%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="389" width="0.8130%" height="15" fill="rgb(234,188,29)" fg:x="542" fg:w="5"/><text x="88.3801%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="373" width="0.8130%" height="15" fill="rgb(246,141,4)" fg:x="542" fg:w="5"/><text x="88.3801%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="88.1301%" y="357" width="0.8130%" height="15" fill="rgb(229,23,39)" fg:x="542" fg:w="5"/><text x="88.3801%" y="367.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (34 samples, 5.53%)</title><rect x="84.3902%" y="581" width="5.5285%" height="15" fill="rgb(206,12,3)" fg:x="519" fg:w="34"/><text x="84.6402%" y="591.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (6 samples, 0.98%)</title><rect x="88.9431%" y="565" width="0.9756%" height="15" fill="rgb(252,226,20)" fg:x="547" fg:w="6"/><text x="89.1931%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (6 samples, 0.98%)</title><rect x="88.9431%" y="549" width="0.9756%" height="15" fill="rgb(216,123,35)" fg:x="547" fg:w="6"/><text x="89.1931%" y="559.50"></text></g><g><title>core::hint::spin_loop (6 samples, 0.98%)</title><rect x="88.9431%" y="533" width="0.9756%" height="15" fill="rgb(212,68,40)" fg:x="547" fg:w="6"/><text x="89.1931%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (6 samples, 0.98%)</title><rect x="88.9431%" y="517" width="0.9756%" height="15" fill="rgb(254,125,32)" fg:x="547" fg:w="6"/><text x="89.1931%" y="527.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (63 samples, 10.24%)</title><rect x="81.7886%" y="613" width="10.2439%" height="15" fill="rgb(253,97,22)" fg:x="503" fg:w="63"/><text x="82.0386%" y="623.50">crossbeam_chann..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (48 samples, 7.80%)</title><rect x="84.2276%" y="597" width="7.8049%" height="15" fill="rgb(241,101,14)" fg:x="518" fg:w="48"/><text x="84.4776%" y="607.50">crossbeam_c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (13 samples, 2.11%)</title><rect x="89.9187%" y="581" width="2.1138%" height="15" fill="rgb(238,103,29)" fg:x="553" fg:w="13"/><text x="90.1687%" y="591.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 2.11%)</title><rect x="89.9187%" y="565" width="2.1138%" height="15" fill="rgb(233,195,47)" fg:x="553" fg:w="13"/><text x="90.1687%" y="575.50">c..</text></g><g><title>core::sync::atomic::atomic_or (13 samples, 2.11%)</title><rect x="89.9187%" y="549" width="2.1138%" height="15" fill="rgb(246,218,30)" fg:x="553" fg:w="13"/><text x="90.1687%" y="559.50">c..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="92.0325%" y="389" width="0.1626%" height="15" fill="rgb(219,145,47)" fg:x="566" fg:w="1"/><text x="92.2825%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.16%)</title><rect x="92.0325%" y="373" width="0.1626%" height="15" fill="rgb(243,12,26)" fg:x="566" fg:w="1"/><text x="92.2825%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="92.0325%" y="357" width="0.1626%" height="15" fill="rgb(214,87,16)" fg:x="566" fg:w="1"/><text x="92.2825%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="92.0325%" y="341" width="0.1626%" height="15" fill="rgb(208,99,42)" fg:x="566" fg:w="1"/><text x="92.2825%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.16%)</title><rect x="92.0325%" y="325" width="0.1626%" height="15" fill="rgb(253,99,2)" fg:x="566" fg:w="1"/><text x="92.2825%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.16%)</title><rect x="92.0325%" y="309" width="0.1626%" height="15" fill="rgb(220,168,23)" fg:x="566" fg:w="1"/><text x="92.2825%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.16%)</title><rect x="92.0325%" y="293" width="0.1626%" height="15" fill="rgb(242,38,24)" fg:x="566" fg:w="1"/><text x="92.2825%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.16%)</title><rect x="92.0325%" y="277" width="0.1626%" height="15" fill="rgb(225,182,9)" fg:x="566" fg:w="1"/><text x="92.2825%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.16%)</title><rect x="92.0325%" y="261" width="0.1626%" height="15" fill="rgb(243,178,37)" fg:x="566" fg:w="1"/><text x="92.2825%" y="271.50"></text></g><g><title>hex::val (1 samples, 0.16%)</title><rect x="92.0325%" y="245" width="0.1626%" height="15" fill="rgb(232,139,19)" fg:x="566" fg:w="1"/><text x="92.2825%" y="255.50"></text></g><g><title>hex::decode (2 samples, 0.33%)</title><rect x="92.0325%" y="581" width="0.3252%" height="15" fill="rgb(225,201,24)" fg:x="566" fg:w="2"/><text x="92.2825%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (2 samples, 0.33%)</title><rect x="92.0325%" y="565" width="0.3252%" height="15" fill="rgb(221,47,46)" fg:x="566" fg:w="2"/><text x="92.2825%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.33%)</title><rect x="92.0325%" y="549" width="0.3252%" height="15" fill="rgb(249,23,13)" fg:x="566" fg:w="2"/><text x="92.2825%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="92.0325%" y="533" width="0.3252%" height="15" fill="rgb(219,9,5)" fg:x="566" fg:w="2"/><text x="92.2825%" y="543.50"></text></g><g><title>core::iter::adapters::process_results (2 samples, 0.33%)</title><rect x="92.0325%" y="517" width="0.3252%" height="15" fill="rgb(254,171,16)" fg:x="566" fg:w="2"/><text x="92.2825%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2 samples, 0.33%)</title><rect x="92.0325%" y="501" width="0.3252%" height="15" fill="rgb(230,171,20)" fg:x="566" fg:w="2"/><text x="92.2825%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.33%)</title><rect x="92.0325%" y="485" width="0.3252%" height="15" fill="rgb(210,71,41)" fg:x="566" fg:w="2"/><text x="92.2825%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="92.0325%" y="469" width="0.3252%" height="15" fill="rgb(206,173,20)" fg:x="566" fg:w="2"/><text x="92.2825%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="92.0325%" y="453" width="0.3252%" height="15" fill="rgb(233,88,34)" fg:x="566" fg:w="2"/><text x="92.2825%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="92.0325%" y="437" width="0.3252%" height="15" fill="rgb(223,209,46)" fg:x="566" fg:w="2"/><text x="92.2825%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="92.0325%" y="421" width="0.3252%" height="15" fill="rgb(250,43,18)" fg:x="566" fg:w="2"/><text x="92.2825%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.33%)</title><rect x="92.0325%" y="405" width="0.3252%" height="15" fill="rgb(208,13,10)" fg:x="566" fg:w="2"/><text x="92.2825%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="92.1951%" y="389" width="0.1626%" height="15" fill="rgb(212,200,36)" fg:x="567" fg:w="1"/><text x="92.4451%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="92.1951%" y="373" width="0.1626%" height="15" fill="rgb(225,90,30)" fg:x="567" fg:w="1"/><text x="92.4451%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="92.1951%" y="357" width="0.1626%" height="15" fill="rgb(236,182,39)" fg:x="567" fg:w="1"/><text x="92.4451%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="92.1951%" y="341" width="0.1626%" height="15" fill="rgb(212,144,35)" fg:x="567" fg:w="1"/><text x="92.4451%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="92.1951%" y="325" width="0.1626%" height="15" fill="rgb(228,63,44)" fg:x="567" fg:w="1"/><text x="92.4451%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.16%)</title><rect x="92.1951%" y="309" width="0.1626%" height="15" fill="rgb(228,109,6)" fg:x="567" fg:w="1"/><text x="92.4451%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.16%)</title><rect x="92.1951%" y="293" width="0.1626%" height="15" fill="rgb(238,117,24)" fg:x="567" fg:w="1"/><text x="92.4451%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.16%)</title><rect x="92.1951%" y="277" width="0.1626%" height="15" fill="rgb(242,26,26)" fg:x="567" fg:w="1"/><text x="92.4451%" y="287.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="92.1951%" y="261" width="0.1626%" height="15" fill="rgb(221,92,48)" fg:x="567" fg:w="1"/><text x="92.4451%" y="271.50"></text></g><g><title>lab4::checksum::Checksum::update (5 samples, 0.81%)</title><rect x="92.0325%" y="597" width="0.8130%" height="15" fill="rgb(209,209,32)" fg:x="566" fg:w="5"/><text x="92.2825%" y="607.50"></text></g><g><title>hex::encode (3 samples, 0.49%)</title><rect x="92.3577%" y="581" width="0.4878%" height="15" fill="rgb(221,70,22)" fg:x="568" fg:w="3"/><text x="92.6077%" y="591.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (3 samples, 0.49%)</title><rect x="92.3577%" y="565" width="0.4878%" height="15" fill="rgb(248,145,5)" fg:x="568" fg:w="3"/><text x="92.6077%" y="575.50"></text></g><g><title>hex::encode_to_iter (3 samples, 0.49%)</title><rect x="92.3577%" y="549" width="0.4878%" height="15" fill="rgb(226,116,26)" fg:x="568" fg:w="3"/><text x="92.6077%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.49%)</title><rect x="92.3577%" y="533" width="0.4878%" height="15" fill="rgb(244,5,17)" fg:x="568" fg:w="3"/><text x="92.6077%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.49%)</title><rect x="92.3577%" y="517" width="0.4878%" height="15" fill="rgb(252,159,33)" fg:x="568" fg:w="3"/><text x="92.6077%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.49%)</title><rect x="92.3577%" y="501" width="0.4878%" height="15" fill="rgb(206,71,0)" fg:x="568" fg:w="3"/><text x="92.6077%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.49%)</title><rect x="92.3577%" y="485" width="0.4878%" height="15" fill="rgb(233,118,54)" fg:x="568" fg:w="3"/><text x="92.6077%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.49%)</title><rect x="92.3577%" y="469" width="0.4878%" height="15" fill="rgb(234,83,48)" fg:x="568" fg:w="3"/><text x="92.6077%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.49%)</title><rect x="92.3577%" y="453" width="0.4878%" height="15" fill="rgb(228,3,54)" fg:x="568" fg:w="3"/><text x="92.6077%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.33%)</title><rect x="92.5203%" y="437" width="0.3252%" height="15" fill="rgb(226,155,13)" fg:x="569" fg:w="2"/><text x="92.7703%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.33%)</title><rect x="92.5203%" y="421" width="0.3252%" height="15" fill="rgb(241,28,37)" fg:x="569" fg:w="2"/><text x="92.7703%" y="431.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.16%)</title><rect x="92.8455%" y="405" width="0.1626%" height="15" fill="rgb(233,93,10)" fg:x="571" fg:w="1"/><text x="93.0955%" y="415.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (1 samples, 0.16%)</title><rect x="92.8455%" y="389" width="0.1626%" height="15" fill="rgb(225,113,19)" fg:x="571" fg:w="1"/><text x="93.0955%" y="399.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (1 samples, 0.16%)</title><rect x="92.8455%" y="373" width="0.1626%" height="15" fill="rgb(241,2,18)" fg:x="571" fg:w="1"/><text x="93.0955%" y="383.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.16%)</title><rect x="92.8455%" y="357" width="0.1626%" height="15" fill="rgb(228,207,21)" fg:x="571" fg:w="1"/><text x="93.0955%" y="367.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.33%)</title><rect x="92.8455%" y="597" width="0.3252%" height="15" fill="rgb(213,211,35)" fg:x="571" fg:w="2"/><text x="93.0955%" y="607.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (2 samples, 0.33%)</title><rect x="92.8455%" y="581" width="0.3252%" height="15" fill="rgb(209,83,10)" fg:x="571" fg:w="2"/><text x="93.0955%" y="591.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (2 samples, 0.33%)</title><rect x="92.8455%" y="565" width="0.3252%" height="15" fill="rgb(209,164,1)" fg:x="571" fg:w="2"/><text x="93.0955%" y="575.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (2 samples, 0.33%)</title><rect x="92.8455%" y="549" width="0.3252%" height="15" fill="rgb(213,184,43)" fg:x="571" fg:w="2"/><text x="93.0955%" y="559.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (2 samples, 0.33%)</title><rect x="92.8455%" y="533" width="0.3252%" height="15" fill="rgb(231,61,34)" fg:x="571" fg:w="2"/><text x="93.0955%" y="543.50"></text></g><g><title>sha2::sha256::Engine256::finish (2 samples, 0.33%)</title><rect x="92.8455%" y="517" width="0.3252%" height="15" fill="rgb(235,75,3)" fg:x="571" fg:w="2"/><text x="93.0955%" y="527.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (2 samples, 0.33%)</title><rect x="92.8455%" y="501" width="0.3252%" height="15" fill="rgb(220,106,47)" fg:x="571" fg:w="2"/><text x="93.0955%" y="511.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (2 samples, 0.33%)</title><rect x="92.8455%" y="485" width="0.3252%" height="15" fill="rgb(210,196,33)" fg:x="571" fg:w="2"/><text x="93.0955%" y="495.50"></text></g><g><title>sha2::sha256::compress256 (2 samples, 0.33%)</title><rect x="92.8455%" y="469" width="0.3252%" height="15" fill="rgb(229,154,42)" fg:x="571" fg:w="2"/><text x="93.0955%" y="479.50"></text></g><g><title>sha2::sha256::x86::compress (2 samples, 0.33%)</title><rect x="92.8455%" y="453" width="0.3252%" height="15" fill="rgb(228,114,26)" fg:x="571" fg:w="2"/><text x="93.0955%" y="463.50"></text></g><g><title>sha2::sha256::soft::compress (2 samples, 0.33%)</title><rect x="92.8455%" y="437" width="0.3252%" height="15" fill="rgb(208,144,1)" fg:x="571" fg:w="2"/><text x="93.0955%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (2 samples, 0.33%)</title><rect x="92.8455%" y="421" width="0.3252%" height="15" fill="rgb(239,112,37)" fg:x="571" fg:w="2"/><text x="93.0955%" y="431.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.16%)</title><rect x="93.0081%" y="405" width="0.1626%" height="15" fill="rgb(210,96,50)" fg:x="572" fg:w="1"/><text x="93.2581%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.16%)</title><rect x="93.0081%" y="389" width="0.1626%" height="15" fill="rgb(222,178,2)" fg:x="572" fg:w="1"/><text x="93.2581%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (11 samples, 1.79%)</title><rect x="93.1707%" y="597" width="1.7886%" height="15" fill="rgb(226,74,18)" fg:x="573" fg:w="11"/><text x="93.4207%" y="607.50">s..</text></g><g><title>core::fmt::write (11 samples, 1.79%)</title><rect x="93.1707%" y="581" width="1.7886%" height="15" fill="rgb(225,67,54)" fg:x="573" fg:w="11"/><text x="93.4207%" y="591.50">c..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 1.79%)</title><rect x="93.1707%" y="565" width="1.7886%" height="15" fill="rgb(251,92,32)" fg:x="573" fg:w="11"/><text x="93.4207%" y="575.50">&lt;..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 1.79%)</title><rect x="93.1707%" y="549" width="1.7886%" height="15" fill="rgb(228,149,22)" fg:x="573" fg:w="11"/><text x="93.4207%" y="559.50">&lt;..</text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 1.79%)</title><rect x="93.1707%" y="533" width="1.7886%" height="15" fill="rgb(243,54,13)" fg:x="573" fg:w="11"/><text x="93.4207%" y="543.50">&lt;..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 1.79%)</title><rect x="93.1707%" y="517" width="1.7886%" height="15" fill="rgb(243,180,28)" fg:x="573" fg:w="11"/><text x="93.4207%" y="527.50">&lt;..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (11 samples, 1.79%)</title><rect x="93.1707%" y="501" width="1.7886%" height="15" fill="rgb(208,167,24)" fg:x="573" fg:w="11"/><text x="93.4207%" y="511.50">s..</text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (11 samples, 1.79%)</title><rect x="93.1707%" y="485" width="1.7886%" height="15" fill="rgb(245,73,45)" fg:x="573" fg:w="11"/><text x="93.4207%" y="495.50">&lt;..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (11 samples, 1.79%)</title><rect x="93.1707%" y="469" width="1.7886%" height="15" fill="rgb(237,203,48)" fg:x="573" fg:w="11"/><text x="93.4207%" y="479.50">&lt;..</text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 1.79%)</title><rect x="93.1707%" y="453" width="1.7886%" height="15" fill="rgb(211,197,16)" fg:x="573" fg:w="11"/><text x="93.4207%" y="463.50">s..</text></g><g><title>__libc_write (11 samples, 1.79%)</title><rect x="93.1707%" y="437" width="1.7886%" height="15" fill="rgb(243,99,51)" fg:x="573" fg:w="11"/><text x="93.4207%" y="447.50">_..</text></g><g><title>__libc_write (11 samples, 1.79%)</title><rect x="93.1707%" y="421" width="1.7886%" height="15" fill="rgb(215,123,29)" fg:x="573" fg:w="11"/><text x="93.4207%" y="431.50">_..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="405" width="1.7886%" height="15" fill="rgb(239,186,37)" fg:x="573" fg:w="11"/><text x="93.4207%" y="415.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="389" width="1.7886%" height="15" fill="rgb(252,136,39)" fg:x="573" fg:w="11"/><text x="93.4207%" y="399.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="373" width="1.7886%" height="15" fill="rgb(223,213,32)" fg:x="573" fg:w="11"/><text x="93.4207%" y="383.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="357" width="1.7886%" height="15" fill="rgb(233,115,5)" fg:x="573" fg:w="11"/><text x="93.4207%" y="367.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="341" width="1.7886%" height="15" fill="rgb(207,226,44)" fg:x="573" fg:w="11"/><text x="93.4207%" y="351.50">[..</text></g><g><title>[unknown] (11 samples, 1.79%)</title><rect x="93.1707%" y="325" width="1.7886%" height="15" fill="rgb(208,126,0)" fg:x="573" fg:w="11"/><text x="93.4207%" y="335.50">[..</text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="93.3333%" y="309" width="1.6260%" height="15" fill="rgb(244,66,21)" fg:x="574" fg:w="10"/><text x="93.5833%" y="319.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="93.3333%" y="293" width="1.6260%" height="15" fill="rgb(222,97,12)" fg:x="574" fg:w="10"/><text x="93.5833%" y="303.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="93.3333%" y="277" width="1.6260%" height="15" fill="rgb(219,213,19)" fg:x="574" fg:w="10"/><text x="93.5833%" y="287.50"></text></g><g><title>[unknown] (8 samples, 1.30%)</title><rect x="93.6585%" y="261" width="1.3008%" height="15" fill="rgb(252,169,30)" fg:x="576" fg:w="8"/><text x="93.9085%" y="271.50"></text></g><g><title>[unknown] (8 samples, 1.30%)</title><rect x="93.6585%" y="245" width="1.3008%" height="15" fill="rgb(206,32,51)" fg:x="576" fg:w="8"/><text x="93.9085%" y="255.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="93.8211%" y="229" width="1.1382%" height="15" fill="rgb(250,172,42)" fg:x="577" fg:w="7"/><text x="94.0711%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="93.9837%" y="213" width="0.9756%" height="15" fill="rgb(209,34,43)" fg:x="578" fg:w="6"/><text x="94.2337%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="93.9837%" y="197" width="0.9756%" height="15" fill="rgb(223,11,35)" fg:x="578" fg:w="6"/><text x="94.2337%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="93.9837%" y="181" width="0.9756%" height="15" fill="rgb(251,219,26)" fg:x="578" fg:w="6"/><text x="94.2337%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="93.9837%" y="165" width="0.9756%" height="15" fill="rgb(231,119,3)" fg:x="578" fg:w="6"/><text x="94.2337%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="94.1463%" y="149" width="0.8130%" height="15" fill="rgb(216,97,11)" fg:x="579" fg:w="5"/><text x="94.3963%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.65%)</title><rect x="94.3089%" y="133" width="0.6504%" height="15" fill="rgb(223,59,9)" fg:x="580" fg:w="4"/><text x="94.5589%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.49%)</title><rect x="94.4715%" y="117" width="0.4878%" height="15" fill="rgb(233,93,31)" fg:x="581" fg:w="3"/><text x="94.7215%" y="127.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (542 samples, 88.13%)</title><rect x="8.4553%" y="805" width="88.1301%" height="15" fill="rgb(239,81,33)" fg:x="52" fg:w="542"/><text x="8.7053%" y="815.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (542 samples, 88.13%)</title><rect x="8.4553%" y="789" width="88.1301%" height="15" fill="rgb(213,120,34)" fg:x="52" fg:w="542"/><text x="8.7053%" y="799.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (542 samples, 88.13%)</title><rect x="8.4553%" y="773" width="88.1301%" height="15" fill="rgb(243,49,53)" fg:x="52" fg:w="542"/><text x="8.7053%" y="783.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (542 samples, 88.13%)</title><rect x="8.4553%" y="757" width="88.1301%" height="15" fill="rgb(247,216,33)" fg:x="52" fg:w="542"/><text x="8.7053%" y="767.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (542 samples, 88.13%)</title><rect x="8.4553%" y="741" width="88.1301%" height="15" fill="rgb(226,26,14)" fg:x="52" fg:w="542"/><text x="8.7053%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (542 samples, 88.13%)</title><rect x="8.4553%" y="725" width="88.1301%" height="15" fill="rgb(215,49,53)" fg:x="52" fg:w="542"/><text x="8.7053%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (542 samples, 88.13%)</title><rect x="8.4553%" y="709" width="88.1301%" height="15" fill="rgb(245,162,40)" fg:x="52" fg:w="542"/><text x="8.7053%" y="719.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (542 samples, 88.13%)</title><rect x="8.4553%" y="693" width="88.1301%" height="15" fill="rgb(229,68,17)" fg:x="52" fg:w="542"/><text x="8.7053%" y="703.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (542 samples, 88.13%)</title><rect x="8.4553%" y="677" width="88.1301%" height="15" fill="rgb(213,182,10)" fg:x="52" fg:w="542"/><text x="8.7053%" y="687.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (542 samples, 88.13%)</title><rect x="8.4553%" y="661" width="88.1301%" height="15" fill="rgb(245,125,30)" fg:x="52" fg:w="542"/><text x="8.7053%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (542 samples, 88.13%)</title><rect x="8.4553%" y="645" width="88.1301%" height="15" fill="rgb(232,202,2)" fg:x="52" fg:w="542"/><text x="8.7053%" y="655.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (196 samples, 31.87%)</title><rect x="64.7154%" y="629" width="31.8699%" height="15" fill="rgb(237,140,51)" fg:x="398" fg:w="196"/><text x="64.9654%" y="639.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (28 samples, 4.55%)</title><rect x="92.0325%" y="613" width="4.5528%" height="15" fill="rgb(236,157,25)" fg:x="566" fg:w="28"/><text x="92.2825%" y="623.50">lab4:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 1.63%)</title><rect x="94.9593%" y="597" width="1.6260%" height="15" fill="rgb(219,209,0)" fg:x="584" fg:w="10"/><text x="95.2093%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (10 samples, 1.63%)</title><rect x="94.9593%" y="581" width="1.6260%" height="15" fill="rgb(240,116,54)" fg:x="584" fg:w="10"/><text x="95.2093%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (10 samples, 1.63%)</title><rect x="94.9593%" y="565" width="1.6260%" height="15" fill="rgb(216,10,36)" fg:x="584" fg:w="10"/><text x="95.2093%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (10 samples, 1.63%)</title><rect x="94.9593%" y="549" width="1.6260%" height="15" fill="rgb(222,72,44)" fg:x="584" fg:w="10"/><text x="95.2093%" y="559.50"></text></g><g><title>__lll_lock_wait (10 samples, 1.63%)</title><rect x="94.9593%" y="533" width="1.6260%" height="15" fill="rgb(232,159,9)" fg:x="584" fg:w="10"/><text x="95.2093%" y="543.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="517" width="1.6260%" height="15" fill="rgb(210,39,32)" fg:x="584" fg:w="10"/><text x="95.2093%" y="527.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="501" width="1.6260%" height="15" fill="rgb(216,194,45)" fg:x="584" fg:w="10"/><text x="95.2093%" y="511.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="485" width="1.6260%" height="15" fill="rgb(218,18,35)" fg:x="584" fg:w="10"/><text x="95.2093%" y="495.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="469" width="1.6260%" height="15" fill="rgb(207,83,51)" fg:x="584" fg:w="10"/><text x="95.2093%" y="479.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="453" width="1.6260%" height="15" fill="rgb(225,63,43)" fg:x="584" fg:w="10"/><text x="95.2093%" y="463.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="437" width="1.6260%" height="15" fill="rgb(207,57,36)" fg:x="584" fg:w="10"/><text x="95.2093%" y="447.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="421" width="1.6260%" height="15" fill="rgb(216,99,33)" fg:x="584" fg:w="10"/><text x="95.2093%" y="431.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="405" width="1.6260%" height="15" fill="rgb(225,42,16)" fg:x="584" fg:w="10"/><text x="95.2093%" y="415.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="389" width="1.6260%" height="15" fill="rgb(220,201,45)" fg:x="584" fg:w="10"/><text x="95.2093%" y="399.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="373" width="1.6260%" height="15" fill="rgb(225,33,4)" fg:x="584" fg:w="10"/><text x="95.2093%" y="383.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="357" width="1.6260%" height="15" fill="rgb(224,33,50)" fg:x="584" fg:w="10"/><text x="95.2093%" y="367.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="341" width="1.6260%" height="15" fill="rgb(246,198,51)" fg:x="584" fg:w="10"/><text x="95.2093%" y="351.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="325" width="1.6260%" height="15" fill="rgb(205,22,4)" fg:x="584" fg:w="10"/><text x="95.2093%" y="335.50"></text></g><g><title>[unknown] (10 samples, 1.63%)</title><rect x="94.9593%" y="309" width="1.6260%" height="15" fill="rgb(206,3,8)" fg:x="584" fg:w="10"/><text x="95.2093%" y="319.50"></text></g><g><title>__GI___clone (559 samples, 90.89%)</title><rect x="6.8293%" y="853" width="90.8943%" height="15" fill="rgb(251,23,15)" fg:x="42" fg:w="559"/><text x="7.0793%" y="863.50">__GI___clone</text></g><g><title>start_thread (554 samples, 90.08%)</title><rect x="7.6423%" y="837" width="90.0813%" height="15" fill="rgb(252,88,28)" fg:x="47" fg:w="554"/><text x="7.8923%" y="847.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (549 samples, 89.27%)</title><rect x="8.4553%" y="821" width="89.2683%" height="15" fill="rgb(212,127,14)" fg:x="52" fg:w="549"/><text x="8.7053%" y="831.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (7 samples, 1.14%)</title><rect x="96.5854%" y="805" width="1.1382%" height="15" fill="rgb(247,145,37)" fg:x="594" fg:w="7"/><text x="96.8354%" y="815.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (7 samples, 1.14%)</title><rect x="96.5854%" y="789" width="1.1382%" height="15" fill="rgb(209,117,53)" fg:x="594" fg:w="7"/><text x="96.8354%" y="799.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (7 samples, 1.14%)</title><rect x="96.5854%" y="773" width="1.1382%" height="15" fill="rgb(212,90,42)" fg:x="594" fg:w="7"/><text x="96.8354%" y="783.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (7 samples, 1.14%)</title><rect x="96.5854%" y="757" width="1.1382%" height="15" fill="rgb(218,164,37)" fg:x="594" fg:w="7"/><text x="96.8354%" y="767.50"></text></g><g><title>__GI___mmap64 (7 samples, 1.14%)</title><rect x="96.5854%" y="741" width="1.1382%" height="15" fill="rgb(246,65,34)" fg:x="594" fg:w="7"/><text x="96.8354%" y="751.50"></text></g><g><title>__GI___mmap64 (7 samples, 1.14%)</title><rect x="96.5854%" y="725" width="1.1382%" height="15" fill="rgb(231,100,33)" fg:x="594" fg:w="7"/><text x="96.8354%" y="735.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="709" width="1.1382%" height="15" fill="rgb(228,126,14)" fg:x="594" fg:w="7"/><text x="96.8354%" y="719.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="693" width="1.1382%" height="15" fill="rgb(215,173,21)" fg:x="594" fg:w="7"/><text x="96.8354%" y="703.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="677" width="1.1382%" height="15" fill="rgb(210,6,40)" fg:x="594" fg:w="7"/><text x="96.8354%" y="687.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="661" width="1.1382%" height="15" fill="rgb(212,48,18)" fg:x="594" fg:w="7"/><text x="96.8354%" y="671.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="645" width="1.1382%" height="15" fill="rgb(230,214,11)" fg:x="594" fg:w="7"/><text x="96.8354%" y="655.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="629" width="1.1382%" height="15" fill="rgb(254,105,39)" fg:x="594" fg:w="7"/><text x="96.8354%" y="639.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="613" width="1.1382%" height="15" fill="rgb(245,158,5)" fg:x="594" fg:w="7"/><text x="96.8354%" y="623.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="597" width="1.1382%" height="15" fill="rgb(249,208,11)" fg:x="594" fg:w="7"/><text x="96.8354%" y="607.50"></text></g><g><title>[unknown] (7 samples, 1.14%)</title><rect x="96.5854%" y="581" width="1.1382%" height="15" fill="rgb(210,39,28)" fg:x="594" fg:w="7"/><text x="96.8354%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.98%)</title><rect x="96.7480%" y="565" width="0.9756%" height="15" fill="rgb(211,56,53)" fg:x="595" fg:w="6"/><text x="96.9980%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="96.9106%" y="549" width="0.8130%" height="15" fill="rgb(226,201,30)" fg:x="596" fg:w="5"/><text x="97.1606%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="96.9106%" y="533" width="0.8130%" height="15" fill="rgb(239,101,34)" fg:x="596" fg:w="5"/><text x="97.1606%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="96.9106%" y="517" width="0.8130%" height="15" fill="rgb(226,209,5)" fg:x="596" fg:w="5"/><text x="97.1606%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="96.9106%" y="501" width="0.8130%" height="15" fill="rgb(250,105,47)" fg:x="596" fg:w="5"/><text x="97.1606%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="96.9106%" y="485" width="0.8130%" height="15" fill="rgb(230,72,3)" fg:x="596" fg:w="5"/><text x="97.1606%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.81%)</title><rect x="97.7236%" y="581" width="0.8130%" height="15" fill="rgb(232,218,39)" fg:x="601" fg:w="5"/><text x="97.9736%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.81%)</title><rect x="97.7236%" y="565" width="0.8130%" height="15" fill="rgb(248,166,6)" fg:x="601" fg:w="5"/><text x="97.9736%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.81%)</title><rect x="97.7236%" y="549" width="0.8130%" height="15" fill="rgb(247,89,20)" fg:x="601" fg:w="5"/><text x="97.9736%" y="559.50"></text></g><g><title>lab4::hackathon::{{closure}} (5 samples, 0.81%)</title><rect x="97.7236%" y="533" width="0.8130%" height="15" fill="rgb(248,130,54)" fg:x="601" fg:w="5"/><text x="97.9736%" y="543.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (5 samples, 0.81%)</title><rect x="97.7236%" y="517" width="0.8130%" height="15" fill="rgb(234,196,4)" fg:x="601" fg:w="5"/><text x="97.9736%" y="527.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (5 samples, 0.81%)</title><rect x="97.7236%" y="501" width="0.8130%" height="15" fill="rgb(250,143,31)" fg:x="601" fg:w="5"/><text x="97.9736%" y="511.50"></text></g><g><title>std::sys::unix::thread::Thread::join (5 samples, 0.81%)</title><rect x="97.7236%" y="485" width="0.8130%" height="15" fill="rgb(211,110,34)" fg:x="601" fg:w="5"/><text x="97.9736%" y="495.50"></text></g><g><title>__pthread_clockjoin_ex (5 samples, 0.81%)</title><rect x="97.7236%" y="469" width="0.8130%" height="15" fill="rgb(215,124,48)" fg:x="601" fg:w="5"/><text x="97.9736%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="453" width="0.8130%" height="15" fill="rgb(216,46,13)" fg:x="601" fg:w="5"/><text x="97.9736%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="437" width="0.8130%" height="15" fill="rgb(205,184,25)" fg:x="601" fg:w="5"/><text x="97.9736%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="421" width="0.8130%" height="15" fill="rgb(228,1,10)" fg:x="601" fg:w="5"/><text x="97.9736%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="405" width="0.8130%" height="15" fill="rgb(213,116,27)" fg:x="601" fg:w="5"/><text x="97.9736%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="389" width="0.8130%" height="15" fill="rgb(241,95,50)" fg:x="601" fg:w="5"/><text x="97.9736%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="373" width="0.8130%" height="15" fill="rgb(238,48,32)" fg:x="601" fg:w="5"/><text x="97.9736%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="357" width="0.8130%" height="15" fill="rgb(235,113,49)" fg:x="601" fg:w="5"/><text x="97.9736%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="341" width="0.8130%" height="15" fill="rgb(205,127,43)" fg:x="601" fg:w="5"/><text x="97.9736%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="325" width="0.8130%" height="15" fill="rgb(250,162,2)" fg:x="601" fg:w="5"/><text x="97.9736%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="309" width="0.8130%" height="15" fill="rgb(220,13,41)" fg:x="601" fg:w="5"/><text x="97.9736%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="293" width="0.8130%" height="15" fill="rgb(249,221,25)" fg:x="601" fg:w="5"/><text x="97.9736%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="277" width="0.8130%" height="15" fill="rgb(215,208,19)" fg:x="601" fg:w="5"/><text x="97.9736%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="261" width="0.8130%" height="15" fill="rgb(236,175,2)" fg:x="601" fg:w="5"/><text x="97.9736%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="97.7236%" y="245" width="0.8130%" height="15" fill="rgb(241,52,2)" fg:x="601" fg:w="5"/><text x="97.9736%" y="255.50"></text></g><g><title>__libc_start_main (6 samples, 0.98%)</title><rect x="97.7236%" y="837" width="0.9756%" height="15" fill="rgb(248,140,14)" fg:x="601" fg:w="6"/><text x="97.9736%" y="847.50"></text></g><g><title>main (6 samples, 0.98%)</title><rect x="97.7236%" y="821" width="0.9756%" height="15" fill="rgb(253,22,42)" fg:x="601" fg:w="6"/><text x="97.9736%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.98%)</title><rect x="97.7236%" y="805" width="0.9756%" height="15" fill="rgb(234,61,47)" fg:x="601" fg:w="6"/><text x="97.9736%" y="815.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.98%)</title><rect x="97.7236%" y="789" width="0.9756%" height="15" fill="rgb(208,226,15)" fg:x="601" fg:w="6"/><text x="97.9736%" y="799.50"></text></g><g><title>std::panicking::try (6 samples, 0.98%)</title><rect x="97.7236%" y="773" width="0.9756%" height="15" fill="rgb(217,221,4)" fg:x="601" fg:w="6"/><text x="97.9736%" y="783.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.98%)</title><rect x="97.7236%" y="757" width="0.9756%" height="15" fill="rgb(212,174,34)" fg:x="601" fg:w="6"/><text x="97.9736%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (6 samples, 0.98%)</title><rect x="97.7236%" y="741" width="0.9756%" height="15" fill="rgb(253,83,4)" fg:x="601" fg:w="6"/><text x="97.9736%" y="751.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.98%)</title><rect x="97.7236%" y="725" width="0.9756%" height="15" fill="rgb(250,195,49)" fg:x="601" fg:w="6"/><text x="97.9736%" y="735.50"></text></g><g><title>std::panicking::try (6 samples, 0.98%)</title><rect x="97.7236%" y="709" width="0.9756%" height="15" fill="rgb(241,192,25)" fg:x="601" fg:w="6"/><text x="97.9736%" y="719.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.98%)</title><rect x="97.7236%" y="693" width="0.9756%" height="15" fill="rgb(208,124,10)" fg:x="601" fg:w="6"/><text x="97.9736%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.98%)</title><rect x="97.7236%" y="677" width="0.9756%" height="15" fill="rgb(222,33,0)" fg:x="601" fg:w="6"/><text x="97.9736%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (6 samples, 0.98%)</title><rect x="97.7236%" y="661" width="0.9756%" height="15" fill="rgb(234,209,28)" fg:x="601" fg:w="6"/><text x="97.9736%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.98%)</title><rect x="97.7236%" y="645" width="0.9756%" height="15" fill="rgb(224,11,23)" fg:x="601" fg:w="6"/><text x="97.9736%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.98%)</title><rect x="97.7236%" y="629" width="0.9756%" height="15" fill="rgb(232,99,1)" fg:x="601" fg:w="6"/><text x="97.9736%" y="639.50"></text></g><g><title>lab4::main (6 samples, 0.98%)</title><rect x="97.7236%" y="613" width="0.9756%" height="15" fill="rgb(237,95,45)" fg:x="601" fg:w="6"/><text x="97.9736%" y="623.50"></text></g><g><title>lab4::hackathon (6 samples, 0.98%)</title><rect x="97.7236%" y="597" width="0.9756%" height="15" fill="rgb(208,109,11)" fg:x="601" fg:w="6"/><text x="97.9736%" y="607.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.16%)</title><rect x="98.5366%" y="581" width="0.1626%" height="15" fill="rgb(216,190,48)" fg:x="606" fg:w="1"/><text x="98.7866%" y="591.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.16%)</title><rect x="98.5366%" y="565" width="0.1626%" height="15" fill="rgb(251,171,36)" fg:x="606" fg:w="1"/><text x="98.7866%" y="575.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.16%)</title><rect x="98.5366%" y="549" width="0.1626%" height="15" fill="rgb(230,62,22)" fg:x="606" fg:w="1"/><text x="98.7866%" y="559.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.16%)</title><rect x="98.5366%" y="533" width="0.1626%" height="15" fill="rgb(225,114,35)" fg:x="606" fg:w="1"/><text x="98.7866%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.16%)</title><rect x="98.5366%" y="517" width="0.1626%" height="15" fill="rgb(215,118,42)" fg:x="606" fg:w="1"/><text x="98.7866%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.16%)</title><rect x="98.5366%" y="501" width="0.1626%" height="15" fill="rgb(243,119,21)" fg:x="606" fg:w="1"/><text x="98.7866%" y="511.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.16%)</title><rect x="98.5366%" y="485" width="0.1626%" height="15" fill="rgb(252,177,53)" fg:x="606" fg:w="1"/><text x="98.7866%" y="495.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.16%)</title><rect x="98.5366%" y="469" width="0.1626%" height="15" fill="rgb(237,209,29)" fg:x="606" fg:w="1"/><text x="98.7866%" y="479.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.16%)</title><rect x="98.5366%" y="453" width="0.1626%" height="15" fill="rgb(212,65,23)" fg:x="606" fg:w="1"/><text x="98.7866%" y="463.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.16%)</title><rect x="98.5366%" y="437" width="0.1626%" height="15" fill="rgb(230,222,46)" fg:x="606" fg:w="1"/><text x="98.7866%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.16%)</title><rect x="98.5366%" y="421" width="0.1626%" height="15" fill="rgb(215,135,32)" fg:x="606" fg:w="1"/><text x="98.7866%" y="431.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.16%)</title><rect x="98.5366%" y="405" width="0.1626%" height="15" fill="rgb(246,101,22)" fg:x="606" fg:w="1"/><text x="98.7866%" y="415.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.16%)</title><rect x="98.5366%" y="389" width="0.1626%" height="15" fill="rgb(206,107,13)" fg:x="606" fg:w="1"/><text x="98.7866%" y="399.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.16%)</title><rect x="98.5366%" y="373" width="0.1626%" height="15" fill="rgb(250,100,44)" fg:x="606" fg:w="1"/><text x="98.7866%" y="383.50"></text></g><g><title>__libc_write (1 samples, 0.16%)</title><rect x="98.5366%" y="357" width="0.1626%" height="15" fill="rgb(231,147,38)" fg:x="606" fg:w="1"/><text x="98.7866%" y="367.50"></text></g><g><title>__libc_write (1 samples, 0.16%)</title><rect x="98.5366%" y="341" width="0.1626%" height="15" fill="rgb(229,8,40)" fg:x="606" fg:w="1"/><text x="98.7866%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="325" width="0.1626%" height="15" fill="rgb(221,135,30)" fg:x="606" fg:w="1"/><text x="98.7866%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="309" width="0.1626%" height="15" fill="rgb(249,193,18)" fg:x="606" fg:w="1"/><text x="98.7866%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="293" width="0.1626%" height="15" fill="rgb(209,133,39)" fg:x="606" fg:w="1"/><text x="98.7866%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="277" width="0.1626%" height="15" fill="rgb(232,100,14)" fg:x="606" fg:w="1"/><text x="98.7866%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="261" width="0.1626%" height="15" fill="rgb(224,185,1)" fg:x="606" fg:w="1"/><text x="98.7866%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="245" width="0.1626%" height="15" fill="rgb(223,139,8)" fg:x="606" fg:w="1"/><text x="98.7866%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="229" width="0.1626%" height="15" fill="rgb(232,213,38)" fg:x="606" fg:w="1"/><text x="98.7866%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="213" width="0.1626%" height="15" fill="rgb(207,94,22)" fg:x="606" fg:w="1"/><text x="98.7866%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="197" width="0.1626%" height="15" fill="rgb(219,183,54)" fg:x="606" fg:w="1"/><text x="98.7866%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.5366%" y="181" width="0.1626%" height="15" fill="rgb(216,185,54)" fg:x="606" fg:w="1"/><text x="98.7866%" y="191.50"></text></g><g><title>_start (7 samples, 1.14%)</title><rect x="97.7236%" y="853" width="1.1382%" height="15" fill="rgb(254,217,39)" fg:x="601" fg:w="7"/><text x="97.9736%" y="863.50"></text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="98.6992%" y="837" width="0.1626%" height="15" fill="rgb(240,178,23)" fg:x="607" fg:w="1"/><text x="98.9492%" y="847.50"></text></g><g><title>_dl_start_final (1 samples, 0.16%)</title><rect x="98.6992%" y="821" width="0.1626%" height="15" fill="rgb(218,11,47)" fg:x="607" fg:w="1"/><text x="98.9492%" y="831.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.16%)</title><rect x="98.6992%" y="805" width="0.1626%" height="15" fill="rgb(218,51,51)" fg:x="607" fg:w="1"/><text x="98.9492%" y="815.50"></text></g><g><title>dl_main (1 samples, 0.16%)</title><rect x="98.6992%" y="789" width="0.1626%" height="15" fill="rgb(238,126,27)" fg:x="607" fg:w="1"/><text x="98.9492%" y="799.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="98.6992%" y="773" width="0.1626%" height="15" fill="rgb(249,202,22)" fg:x="607" fg:w="1"/><text x="98.9492%" y="783.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="98.6992%" y="757" width="0.1626%" height="15" fill="rgb(254,195,49)" fg:x="607" fg:w="1"/><text x="98.9492%" y="767.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="98.6992%" y="741" width="0.1626%" height="15" fill="rgb(208,123,14)" fg:x="607" fg:w="1"/><text x="98.9492%" y="751.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="98.6992%" y="725" width="0.1626%" height="15" fill="rgb(224,200,8)" fg:x="607" fg:w="1"/><text x="98.9492%" y="735.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.16%)</title><rect x="98.6992%" y="709" width="0.1626%" height="15" fill="rgb(217,61,36)" fg:x="607" fg:w="1"/><text x="98.9492%" y="719.50"></text></g><g><title>_dl_map_segments (1 samples, 0.16%)</title><rect x="98.6992%" y="693" width="0.1626%" height="15" fill="rgb(206,35,45)" fg:x="607" fg:w="1"/><text x="98.9492%" y="703.50"></text></g><g><title>__mmap64 (1 samples, 0.16%)</title><rect x="98.6992%" y="677" width="0.1626%" height="15" fill="rgb(217,65,33)" fg:x="607" fg:w="1"/><text x="98.9492%" y="687.50"></text></g><g><title>__mmap64 (1 samples, 0.16%)</title><rect x="98.6992%" y="661" width="0.1626%" height="15" fill="rgb(222,158,48)" fg:x="607" fg:w="1"/><text x="98.9492%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="645" width="0.1626%" height="15" fill="rgb(254,2,54)" fg:x="607" fg:w="1"/><text x="98.9492%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="629" width="0.1626%" height="15" fill="rgb(250,143,38)" fg:x="607" fg:w="1"/><text x="98.9492%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="613" width="0.1626%" height="15" fill="rgb(248,25,0)" fg:x="607" fg:w="1"/><text x="98.9492%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="597" width="0.1626%" height="15" fill="rgb(206,152,27)" fg:x="607" fg:w="1"/><text x="98.9492%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="581" width="0.1626%" height="15" fill="rgb(240,77,30)" fg:x="607" fg:w="1"/><text x="98.9492%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="565" width="0.1626%" height="15" fill="rgb(231,5,3)" fg:x="607" fg:w="1"/><text x="98.9492%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="549" width="0.1626%" height="15" fill="rgb(207,226,32)" fg:x="607" fg:w="1"/><text x="98.9492%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="533" width="0.1626%" height="15" fill="rgb(222,207,47)" fg:x="607" fg:w="1"/><text x="98.9492%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="517" width="0.1626%" height="15" fill="rgb(229,115,45)" fg:x="607" fg:w="1"/><text x="98.9492%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="501" width="0.1626%" height="15" fill="rgb(224,191,6)" fg:x="607" fg:w="1"/><text x="98.9492%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.16%)</title><rect x="98.6992%" y="485" width="0.1626%" height="15" fill="rgb(230,227,24)" fg:x="607" fg:w="1"/><text x="98.9492%" y="495.50"></text></g><g><title>lab4 (610 samples, 99.19%)</title><rect x="0.0000%" y="869" width="99.1870%" height="15" fill="rgb(228,80,19)" fg:x="0" fg:w="610"/><text x="0.2500%" y="879.50">lab4</text></g><g><title>core::slice::memchr::memchr_general_case (2 samples, 0.33%)</title><rect x="98.8618%" y="853" width="0.3252%" height="15" fill="rgb(247,229,0)" fg:x="608" fg:w="2"/><text x="99.1118%" y="863.50"></text></g><g><title>all (615 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(237,194,15)" fg:x="0" fg:w="615"/><text x="0.2500%" y="895.50"></text></g><g><title>perf-exec (5 samples, 0.81%)</title><rect x="99.1870%" y="869" width="0.8130%" height="15" fill="rgb(219,203,20)" fg:x="610" fg:w="5"/><text x="99.4370%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="853" width="0.8130%" height="15" fill="rgb(234,128,8)" fg:x="610" fg:w="5"/><text x="99.4370%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="837" width="0.8130%" height="15" fill="rgb(248,202,8)" fg:x="610" fg:w="5"/><text x="99.4370%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="821" width="0.8130%" height="15" fill="rgb(206,104,37)" fg:x="610" fg:w="5"/><text x="99.4370%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="805" width="0.8130%" height="15" fill="rgb(223,8,27)" fg:x="610" fg:w="5"/><text x="99.4370%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="789" width="0.8130%" height="15" fill="rgb(216,217,28)" fg:x="610" fg:w="5"/><text x="99.4370%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="773" width="0.8130%" height="15" fill="rgb(249,199,1)" fg:x="610" fg:w="5"/><text x="99.4370%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="757" width="0.8130%" height="15" fill="rgb(240,85,17)" fg:x="610" fg:w="5"/><text x="99.4370%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="741" width="0.8130%" height="15" fill="rgb(206,108,45)" fg:x="610" fg:w="5"/><text x="99.4370%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="725" width="0.8130%" height="15" fill="rgb(245,210,41)" fg:x="610" fg:w="5"/><text x="99.4370%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="709" width="0.8130%" height="15" fill="rgb(206,13,37)" fg:x="610" fg:w="5"/><text x="99.4370%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="693" width="0.8130%" height="15" fill="rgb(250,61,18)" fg:x="610" fg:w="5"/><text x="99.4370%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="677" width="0.8130%" height="15" fill="rgb(235,172,48)" fg:x="610" fg:w="5"/><text x="99.4370%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="661" width="0.8130%" height="15" fill="rgb(249,201,17)" fg:x="610" fg:w="5"/><text x="99.4370%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.81%)</title><rect x="99.1870%" y="645" width="0.8130%" height="15" fill="rgb(219,208,6)" fg:x="610" fg:w="5"/><text x="99.4370%" y="655.50"></text></g></svg></svg>